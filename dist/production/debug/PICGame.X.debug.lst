

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 31 00:34:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F627
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataEEDATA,global,class=EEDATA,space=3,delta=2,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 22/03/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F627 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     008C                     	;# 
   100     008E                     	;# 
   101     0092                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009F                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0015                     	;# 
   126     0015                     	;# 
   127     0016                     	;# 
   128     0017                     	;# 
   129     0018                     	;# 
   130     0019                     	;# 
   131     001A                     	;# 
   132     001F                     	;# 
   133     0081                     	;# 
   134     0085                     	;# 
   135     0086                     	;# 
   136     008C                     	;# 
   137     008E                     	;# 
   138     0092                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009F                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     008C                     	;# 
   174     008E                     	;# 
   175     0092                     	;# 
   176     0098                     	;# 
   177     0099                     	;# 
   178     009A                     	;# 
   179     009B                     	;# 
   180     009C                     	;# 
   181     009D                     	;# 
   182     009F                     	;# 
   183                           
   184                           	psect	idataEEDATA
   185     0000                     __pidataEEDATA:
   186     0000                     _eeprom_cgram_data:	
   187                           ;initializer for _eeprom_cgram_data
   188                           
   189     0000  0007               	db	7
   190     0001  0005               	db	5
   191     0002  000D               	db	13
   192     0003  0009               	db	9
   193     0004  001B               	db	27
   194     0005  001F               	db	31
   195     0006  001D               	db	29
   196     0007  0002               	db	2
   197     0008  001F               	db	31
   198     0009  0015               	db	21
   199     000A  000A               	db	10
   200     000B  0015               	db	21
   201     000C  000A               	db	10
   202     000D  001F               	db	31
   203     000E  0017               	db	23
   204     000F  0008               	db	8
   205     0010  001C               	db	28
   206     0011  000A               	db	10
   207     0012  0019               	db	25
   208     0013  000D               	db	13
   209     0014  001F               	db	31
   210     0015  001F               	db	31
   211     0016  001B               	db	27
   212     0017  0004               	db	4
   213     0018  0000               	db	0
   214     0019  000E               	db	14
   215     001A  001B               	db	27
   216     001B  001F               	db	31
   217     001C  0015               	db	21
   218     001D  0015               	db	21
   219     001E  0015               	db	21
   220     001F  001F               	db	31
   221     0020  0000               	db	0
   222     0021  0004               	db	4
   223     0022  000A               	db	10
   224     0023  0004               	db	4
   225     0024  001F               	db	31
   226     0025  0004               	db	4
   227     0026  000A               	db	10
   228     0027  0011               	db	17
   229     0028  000A               	db	10
   230     0029  0015               	db	21
   231     002A  000A               	db	10
   232     002B  0015               	db	21
   233     002C  000A               	db	10
   234     002D  0004               	db	4
   235     002E  0004               	db	4
   236     002F  001C               	db	28
   237     0030                     _eeprom_keys:	
   238                           ;initializer for _eeprom_keys
   239                           
   240     0030  0031               	db	49
   241     0031  0032               	db	50
   242     0032  0033               	db	51
   243     0033  0041               	db	65
   244     0034  0034               	db	52
   245     0035  0035               	db	53
   246     0036  0036               	db	54
   247     0037  0042               	db	66
   248     0038  0037               	db	55
   249     0039  0038               	db	56
   250     003A  0039               	db	57
   251     003B  0043               	db	67
   252     003C  002A               	db	42
   253     003D  0030               	db	48
   254     003E  0023               	db	35
   255     003F  0044               	db	68
   256     0040  0000               	db	0
   257     0041                     _tile_set:	
   258                           ;initializer for _tile_set
   259                           
   260     0041  0020               	db	32
   261     0042  0003               	db	3
   262     0043  0004               	db	4
   263     0044  0005               	db	5
   264     0005                     _PORTA	set	5
   265     0012                     _T2CON	set	18
   266     0017                     _CCP1CON	set	23
   267     001F                     _CMCON	set	31
   268     0011                     _TMR2	set	17
   269     0001                     _TMR0	set	1
   270     0015                     _CCPR1L	set	21
   271     0006                     _PORTB	set	6
   272     0006                     _PORTBbits	set	6
   273     000B                     _INTCON	set	11
   274     0005                     _PORTAbits	set	5
   275     005A                     _T0IF	set	90
   276     009A                     _EEDATA	set	154
   277     009C                     _EECON1	set	156
   278     009B                     _EEADR	set	155
   279     009C                     _EECON1bits	set	156
   280     0081                     _OPTION_REG	set	129
   281     0086                     _TRISB	set	134
   282     0085                     _TRISA	set	133
   283     008E                     _PCONbits	set	142
   284     0092                     _PR2	set	146
   285                           
   286                           	psect	strings
   287     02D3                     __pstrings:
   288     02D3                     stringtab:
   289     02D3                     __stringtab:
   290                           
   291                           ;	String table - string pointers are 1 byte each
   292     02D3  1BFF               	btfsc	btemp+1,7
   293     02D4  2ADD               	ljmp	stringcode
   294     02D5  1383               	bcf	3,7
   295     02D6  187F               	btfsc	btemp+1,0
   296     02D7  1783               	bsf	3,7
   297     02D8  0800               	movf	0,w
   298     02D9  0A84               	incf	4,f
   299     02DA  1903               	skipnz
   300     02DB  0AFF               	incf	btemp+1,f
   301     02DC  0008               	return
   302     02DD                     stringcode:
   303     02DD                     stringdir:
   304     02DD  3002               	movlw	high stringdir
   305     02DE  008A               	movwf	10
   306     02DF  0804               	movf	4,w
   307     02E0  0A84               	incf	4,f
   308     02E1  0782               	addwf	2,f
   309     02E2                     __stringbase:
   310     02E2  3400               	retlw	0
   311     02E3                     __end_of__stringtab:
   312     02E3                     STR_1:
   313     02E3  3453               	retlw	83	;'S'
   314     02E4  3465               	retlw	101	;'e'
   315     02E5  346C               	retlw	108	;'l'
   316     02E6  3465               	retlw	101	;'e'
   317     02E7  3463               	retlw	99	;'c'
   318     02E8  3474               	retlw	116	;'t'
   319     02E9  3420               	retlw	32	;' '
   320     02EA  3467               	retlw	103	;'g'
   321     02EB  3461               	retlw	97	;'a'
   322     02EC  346D               	retlw	109	;'m'
   323     02ED  3465               	retlw	101	;'e'
   324     02EE  3421               	retlw	33	;'!'
   325     02EF  3400               	retlw	0
   326     02F0  3400               	retlw	0
   327     02F1                     STR_2:
   328     02F1  3441               	retlw	65	;'A'
   329     02F2  3420               	retlw	32	;' '
   330     02F3  342F               	retlw	47	;'/'
   331     02F4  3420               	retlw	32	;' '
   332     02F5  3442               	retlw	66	;'B'
   333     02F6  3400               	retlw	0
   334     02F7  3400               	retlw	0
   335                           
   336                           	psect	cinit
   337     000F                     start_initialization:	
   338                           ; #config settings
   339                           
   340     000F                     __initialization:
   341                           
   342                           ; Clear objects allocated to BANK1
   343     000F  1383               	bcf	3,7	;select IRP bank0
   344     0010  30A0               	movlw	low __pbssBANK1
   345     0011  0084               	movwf	4
   346     0012  30C2               	movlw	low (__pbssBANK1+34)
   347     0013  23DE               	fcall	clear_ram0
   348                           
   349                           ; Clear objects allocated to BANK0
   350     0014  3020               	movlw	low __pbssBANK0
   351     0015  0084               	movwf	4
   352     0016  304D               	movlw	low (__pbssBANK0+45)
   353     0017  23DE               	fcall	clear_ram0
   354                           
   355                           ; Clear objects allocated to COMMON
   356     0018  01FB               	clrf	__pbssCOMMON& (0+127)
   357     0019  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   358     001A  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   359     001B                     end_of_initialization:	
   360                           ;End of C runtime variable initialization code
   361                           
   362     001B                     __end_of__initialization:
   363     001B  0183               	clrf	3
   364     001C  281D               	ljmp	_main	;jump to C main() function
   365                           
   366                           	psect	dataEEDATA
   367     0000                     __pdataEEDATA:
   368                           
   369                           	psect	bssCOMMON
   370     007B                     __pbssCOMMON:
   371     007B                     isr@kbd_skip_t0_cyc:
   372     007B                     	ds	1
   373     007C                     isr@key_col_select:
   374     007C                     	ds	1
   375     007D                     _beep_delay:
   376     007D                     	ds	1
   377                           
   378                           	psect	bssBANK0
   379     0020                     __pbssBANK0:
   380     0020                     _keys:
   381     0020                     	ds	16
   382     0030                     _LCD:
   383     0030                     	ds	2
   384     0032                     rand_tile@psrand_seed:
   385     0032                     	ds	1
   386     0033                     isr@prev_key:
   387     0033                     	ds	1
   388     0034                     _gameB_cnt_ena:
   389     0034                     	ds	1
   390     0035                     _flash_lcd:
   391     0035                     	ds	1
   392     0036                     _gameB_difficulty:
   393     0036                     	ds	1
   394     0037                     _gameB_obstacle_delay:
   395     0037                     	ds	1
   396     0038                     _gameB_truckpos:
   397     0038                     	ds	1
   398     0039                     _gameB_spd_cnt:
   399     0039                     	ds	1
   400     003A                     _gameB_spd:
   401     003A                     	ds	1
   402     003B                     _key:
   403     003B                     	ds	1
   404     003C                     _gameA_line_buf:
   405     003C                     	ds	17
   406                           
   407                           	psect	bssBANK1
   408     00A0                     __pbssBANK1:
   409     00A0                     _gameB_track:
   410     00A0                     	ds	34
   411                           
   412                           	psect	inittext
   413     039D                     init_fetch0:	
   414                           ;	Called with low address in FSR and high address in W
   415                           
   416     039D  087E               	movf	126,w
   417     039E  008A               	movwf	10
   418     039F  087F               	movf	127,w
   419     03A0  0082               	movwf	2
   420     03A1                     init_ram0:	
   421                           ;Called with:
   422                           ;	high address of idata address in btemp 
   423                           ;	low address of idata address in btemp+1 
   424                           ;	low address of data in FSR
   425                           ;	high address + 1 of data in btemp-1
   426                           
   427     03A1  239D               	fcall	init_fetch0
   428     03A2  0080               	movwf	0
   429     03A3  0A84               	incf	4,f
   430     03A4  0804               	movf	4,w
   431     03A5  067D               	xorwf	125,w
   432     03A6  1903               	btfsc	3,2
   433     03A7  3400               	retlw	0
   434     03A8  0AFF               	incf	127,f
   435     03A9  1903               	btfsc	3,2
   436     03AA  0AFE               	incf	126,f
   437     03AB  2BA1               	goto	init_ram0
   438                           
   439                           	psect	clrtext
   440     03DE                     clear_ram0:	
   441                           ;	Called with FSR containing the base address, and
   442                           ;	W with the last address+1
   443                           
   444     03DE  0064               	clrwdt	;clear the watchdog before getting into this loop
   445     03DF                     clrloop0:
   446     03DF  0180               	clrf	0	;clear RAM location pointed to by FSR
   447     03E0  0A84               	incf	4,f	;increment pointer
   448     03E1  0604               	xorwf	4,w	;XOR with final address
   449     03E2  1903               	btfsc	3,2	;have we reached the end yet?
   450     03E3  3400               	retlw	0	;all done for this memory range, return
   451     03E4  0604               	xorwf	4,w	;XOR again to restore value
   452     03E5  2BDF               	goto	clrloop0	;do the next byte
   453                           
   454                           	psect	cstackCOMMON
   455     0070                     __pcstackCOMMON:
   456     0070                     ?_init:
   457     0070                     ?_LCD_init:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ?_LCD_wrdata:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ?_clearstr:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_LCD_putc:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ?_rand_tile:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_kbd_eval:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ?_LCD_waitbf:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_main:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ?_isr:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_LCD_set_cgram_addr:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?___eetoc:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?i1__beep:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     kbd_eval@col:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     i1__beep@CCPR1L_val:	
   497                           ; 1 bytes @ 0x0
   498                           
   499                           
   500                           ; 1 bytes @ 0x0
   501     0070                     	ds	1
   502     0071                     ??_kbd_eval:
   503     0071                     ??i1__beep:	
   504                           ; 1 bytes @ 0x1
   505                           
   506     0071                     kbd_eval@key_ptr:	
   507                           ; 1 bytes @ 0x1
   508                           
   509     0071                     i1__beep@PR2_val:	
   510                           ; 1 bytes @ 0x1
   511                           
   512                           
   513                           ; 1 bytes @ 0x1
   514     0071                     	ds	1
   515     0072                     kbd_eval@row:
   516                           
   517                           ; 1 bytes @ 0x2
   518     0072                     	ds	1
   519     0073                     ??_isr:
   520                           
   521                           ; 1 bytes @ 0x3
   522     0073                     	ds	5
   523     0078                     isr@_col:
   524                           
   525                           ; 1 bytes @ 0x8
   526     0078                     	ds	1
   527     0079                     isr@_row:
   528                           
   529                           ; 1 bytes @ 0x9
   530     0079                     	ds	1
   531     007A                     isr@_key:
   532                           
   533                           ; 1 bytes @ 0xA
   534     007A                     	ds	1
   535                           
   536                           	psect	cstackBANK0
   537     004D                     __pcstackBANK0:
   538     004D                     ??_init:
   539     004D                     ??_clearstr:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     004D                     ?__beep:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     004D                     ??_LCD_waitbf:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     004D                     ?___eecpymem:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     004D                     __beep@CCPR1L_val:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     004D                     clearstr@str:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     004D                     LCD_waitbf@busy:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     004D                     ___eecpymem@from:	
   561                           ; 1 bytes @ 0x0
   562                           
   563                           
   564                           ; 1 bytes @ 0x0
   565     004D                     	ds	1
   566     004E                     ??_LCD_wrdata:
   567     004E                     ??__beep:	
   568                           ; 1 bytes @ 0x1
   569                           
   570     004E                     __beep@PR2_val:	
   571                           ; 1 bytes @ 0x1
   572                           
   573     004E                     ___eecpymem@size:	
   574                           ; 1 bytes @ 0x1
   575                           
   576                           
   577                           ; 1 bytes @ 0x1
   578     004E                     	ds	1
   579     004F                     ??___eecpymem:
   580     004F                     LCD_wrdata@data:	
   581                           ; 1 bytes @ 0x2
   582                           
   583     004F                     ___eecpymem@cp:	
   584                           ; 1 bytes @ 0x2
   585                           
   586                           
   587                           ; 1 bytes @ 0x2
   588     004F                     	ds	1
   589     0050                     ??_LCD_init:
   590     0050                     ?_LCD_gotoxy:	
   591                           ; 1 bytes @ 0x3
   592                           
   593     0050                     ??_LCD_putc:	
   594                           ; 1 bytes @ 0x3
   595                           
   596     0050                     ??_LCD_set_cgram_addr:	
   597                           ; 1 bytes @ 0x3
   598                           
   599     0050                     LCD_set_cgram_addr@addr:	
   600                           ; 1 bytes @ 0x3
   601                           
   602     0050                     LCD_gotoxy@y:	
   603                           ; 1 bytes @ 0x3
   604                           
   605     0050                     LCD_putc@chr:	
   606                           ; 1 bytes @ 0x3
   607                           
   608     0050                     ___eecpymem@to:	
   609                           ; 1 bytes @ 0x3
   610                           
   611                           
   612                           ; 1 bytes @ 0x3
   613     0050                     	ds	1
   614     0051                     ??_LCD_gotoxy:
   615     0051                     ?_LCD_puts:	
   616                           ; 1 bytes @ 0x4
   617                           
   618     0051                     ??___eetoc:	
   619                           ; 1 bytes @ 0x4
   620                           
   621     0051                     ___eetoc@addr:	
   622                           ; 1 bytes @ 0x4
   623                           
   624     0051                     LCD_puts@str:	
   625                           ; 1 bytes @ 0x4
   626                           
   627                           
   628                           ; 2 bytes @ 0x4
   629     0051                     	ds	1
   630     0052                     LCD_gotoxy@x:
   631     0052                     LCD_init@i:	
   632                           ; 1 bytes @ 0x5
   633                           
   634     0052                     ___eetoc@data:	
   635                           ; 1 bytes @ 0x5
   636                           
   637                           
   638                           ; 1 bytes @ 0x5
   639     0052                     	ds	1
   640     0053                     ?_LCD_wr_custom_char:
   641     0053                     ??_LCD_puts:	
   642                           ; 1 bytes @ 0x6
   643                           
   644     0053                     ??_rand_tile:	
   645                           ; 1 bytes @ 0x6
   646                           
   647     0053                     rand_tile@res:	
   648                           ; 1 bytes @ 0x6
   649                           
   650     0053                     LCD_wr_custom_char@dataarr:	
   651                           ; 1 bytes @ 0x6
   652                           
   653                           
   654                           ; 1 bytes @ 0x6
   655     0053                     	ds	1
   656     0054                     ??_LCD_wr_custom_char:
   657                           
   658                           ; 1 bytes @ 0x7
   659     0054                     	ds	1
   660     0055                     LCD_wr_custom_char@code:
   661                           
   662                           ; 1 bytes @ 0x8
   663     0055                     	ds	1
   664     0056                     LCD_wr_custom_char@cnt:
   665                           
   666                           ; 1 bytes @ 0x9
   667     0056                     	ds	1
   668     0057                     ??_main:
   669                           
   670                           ; 1 bytes @ 0xA
   671     0057                     	ds	3
   672     005A                     main@_key:
   673                           
   674                           ; 1 bytes @ 0xD
   675     005A                     	ds	1
   676     005B                     main@xpos:
   677                           
   678                           ; 1 bytes @ 0xE
   679     005B                     	ds	1
   680     005C                     main@hits:
   681                           
   682                           ; 1 bytes @ 0xF
   683     005C                     	ds	1
   684     005D                     main@ypos:
   685                           
   686                           ; 1 bytes @ 0x10
   687     005D                     	ds	1
   688     005E                     main@i:
   689                           
   690                           ; 1 bytes @ 0x11
   691     005E                     	ds	1
   692                           
   693                           	psect	maintext
   694     001D                     __pmaintext:	
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 103 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  _key            1   13[BANK0 ] unsigned char 
   705 ;;  ypos            1   16[BANK0 ] unsigned char 
   706 ;;  hits            1   15[BANK0 ] struct .
   707 ;;  xpos            1   14[BANK0 ] unsigned char 
   708 ;;  i               1   17[BANK0 ] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : B00/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   718 ;;      Params:         0       0       0       0
   719 ;;      Locals:         0       5       0       0
   720 ;;      Temps:          0       3       0       0
   721 ;;      Totals:         0       8       0       0
   722 ;;Total ram usage:        8 bytes
   723 ;; Hardware stack levels required when called: 6
   724 ;; This function calls:
   725 ;;		_LCD_gotoxy
   726 ;;		_LCD_init
   727 ;;		_LCD_putc
   728 ;;		_LCD_puts
   729 ;;		_LCD_wr_custom_char
   730 ;;		_LCD_wrdata
   731 ;;		___eetoc
   732 ;;		__beep
   733 ;;		_clearstr
   734 ;;		_init
   735 ;;		_rand_tile
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741     001D                     _main:	
   742                           ;psect for function _main
   743                           
   744                           
   745                           ;main.c: 106: init();
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   749     001D  2379               	fcall	_init
   750                           
   751                           ;main.c: 108: uint8_t i = 16 - 1;
   752     001E  300F               	movlw	15
   753     001F  00DE               	movwf	main@i
   754     0020                     l1549:
   755                           
   756                           ;main.c: 110: keys[i] = eeprom_keys[i];
   757     0020  085E               	movf	main@i,w
   758     0021  3E30               	addlw	low _eeprom_keys
   759     0022  23D5               	fcall	___eetoc
   760     0023  00FF               	movwf	127
   761     0024  085E               	movf	main@i,w
   762     0025  3E20               	addlw	(low (_keys| 0))& (0+255)
   763     0026  0084               	movwf	4
   764     0027  087F               	movf	127,w
   765     0028  1383               	bcf	3,7	;select IRP bank0
   766     0029  0080               	movwf	0
   767                           
   768                           ;main.c: 111: gameA_line_buf[i] = ' ';
   769     002A  085E               	movf	main@i,w
   770     002B  3E3C               	addlw	(low (_gameA_line_buf| 0))& (0+255)
   771     002C  0084               	movwf	4
   772     002D  3020               	movlw	32
   773     002E  0080               	movwf	0
   774                           
   775                           ;main.c: 112: } while (i--);
   776     002F  3001               	movlw	1
   777     0030  02DE               	subwf	main@i,f
   778     0031  0A5E               	incf	main@i,w
   779     0032  1D03               	btfss	3,2
   780     0033  2820               	goto	l1549
   781                           
   782                           ;main.c: 113: gameA_line_buf[16] = 0;
   783     0034  01CC               	clrf	_gameA_line_buf+16
   784                           
   785                           ;main.c: 116: LCD_init();
   786     0035  222A               	fcall	_LCD_init
   787                           
   788                           ;main.c: 119: LCD_wr_custom_char(0, eeprom_cgram_data[0]);
   789     0036  3000               	movlw	(low _eeprom_cgram_data)& (0+255)
   790     0037  00D3               	movwf	LCD_wr_custom_char@dataarr
   791     0038  3000               	movlw	0
   792     0039  2318               	fcall	_LCD_wr_custom_char
   793                           
   794                           ;main.c: 120: LCD_wr_custom_char(1, eeprom_cgram_data[1]);
   795     003A  3008               	movlw	(low (_eeprom_cgram_data+8))& (0+255)
   796     003B  00D3               	movwf	LCD_wr_custom_char@dataarr
   797     003C  3001               	movlw	1
   798     003D  2318               	fcall	_LCD_wr_custom_char
   799                           
   800                           ;main.c: 121: LCD_wr_custom_char(2, eeprom_cgram_data[2]);
   801     003E  3010               	movlw	(low (_eeprom_cgram_data+16))& (0+255)
   802     003F  00D3               	movwf	LCD_wr_custom_char@dataarr
   803     0040  3002               	movlw	2
   804     0041  2318               	fcall	_LCD_wr_custom_char
   805                           
   806                           ;main.c: 122: LCD_wr_custom_char(3, eeprom_cgram_data[3]);
   807     0042  3018               	movlw	(low (_eeprom_cgram_data+24))& (0+255)
   808     0043  00D3               	movwf	LCD_wr_custom_char@dataarr
   809     0044  3003               	movlw	3
   810     0045  2318               	fcall	_LCD_wr_custom_char
   811                           
   812                           ;main.c: 123: LCD_wr_custom_char(4, eeprom_cgram_data[4]);
   813     0046  3020               	movlw	(low (_eeprom_cgram_data+32))& (0+255)
   814     0047  00D3               	movwf	LCD_wr_custom_char@dataarr
   815     0048  3004               	movlw	4
   816     0049  2318               	fcall	_LCD_wr_custom_char
   817                           
   818                           ;main.c: 124: LCD_wr_custom_char(5, eeprom_cgram_data[5]);
   819     004A  3028               	movlw	(low (_eeprom_cgram_data+40))& (0+255)
   820     004B  00D3               	movwf	LCD_wr_custom_char@dataarr
   821     004C  3005               	movlw	5
   822     004D  2318               	fcall	_LCD_wr_custom_char
   823                           
   824                           ;main.c: 126: LCD.DisplayControl |= 0b00000100;
   825     004E  1531               	bsf	_LCD+1,2
   826                           
   827                           ;main.c: 127: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) LCD.DisplayControl);;
   828     004F  1205               	bcf	5,4	;volatile
   829     0050  0831               	movf	_LCD+1,w
   830     0051  227A               	fcall	_LCD_wrdata
   831                           
   832                           ;main.c: 130: INTCON = 0b10100000;
   833     0052  30A0               	movlw	160
   834     0053  008B               	movwf	11	;volatile
   835     0054                     l1579:
   836                           
   837                           ;main.c: 136: LCD_gotoxy(0, 0);
   838     0054  1283               	bcf	3,5	;RP0=0, select bank0
   839     0055  1303               	bcf	3,6	;RP1=0, select bank0
   840     0056  01D0               	clrf	LCD_gotoxy@y
   841     0057  3000               	movlw	0
   842     0058  23AC               	fcall	_LCD_gotoxy
   843                           
   844                           ;main.c: 137: LCD_puts("Select game!\0");
   845     0059  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   846     005A  00D1               	movwf	LCD_puts@str
   847     005B  3080               	movlw	128
   848     005C  00D2               	movwf	LCD_puts@str+1
   849     005D  2364               	fcall	_LCD_puts
   850                           
   851                           ;main.c: 138: LCD_gotoxy(0, 1);
   852     005E  01D0               	clrf	LCD_gotoxy@y
   853     005F  0AD0               	incf	LCD_gotoxy@y,f
   854     0060  3000               	movlw	0
   855     0061  23AC               	fcall	_LCD_gotoxy
   856                           
   857                           ;main.c: 139: LCD_puts("A / B\0");
   858     0062  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   859     0063  00D1               	movwf	LCD_puts@str
   860     0064  3080               	movlw	128
   861     0065  00D2               	movwf	LCD_puts@str+1
   862     0066  2364               	fcall	_LCD_puts
   863     0067                     l1587:
   864                           
   865                           ;main.c: 143: key = '\0'; while (!key) { };
   866     0067  01BB               	clrf	_key
   867     0068                     l1589:
   868     0068  083B               	movf	_key,w
   869     0069  1D03               	btfss	3,2
   870     006A  29AA               	goto	l1739
   871     006B  2868               	goto	l1589
   872     006C                     l101:	
   873                           ;main.c: 145: case 'A':
   874                           
   875                           
   876                           ;main.c: 149: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) 0b00000001);; _delay((unsigned lon
      +                          g)((50)*(4000000/4000.0)));;
   877     006C  1205               	bcf	5,4	;volatile
   878     006D  3001               	movlw	1
   879     006E  227A               	fcall	_LCD_wrdata
   880     006F  3041               	movlw	65
   881     0070  1283               	bcf	3,5	;RP0=0, select bank0
   882     0071  1303               	bcf	3,6	;RP1=0, select bank0
   883     0072  00D8               	movwf	??_main+1
   884     0073  30EE               	movlw	238
   885     0074  00D7               	movwf	??_main
   886     0075                     u957:
   887     0075  0BD7               	decfsz	??_main,f
   888     0076  2875               	goto	u957
   889     0077  0BD8               	decfsz	??_main+1,f
   890     0078  2875               	goto	u957
   891                           
   892                           ;main.c: 150: LCD.DisplayControl |= 0b00000001;
   893     0079  1283               	bcf	3,5	;RP0=0, select bank0
   894     007A  1303               	bcf	3,6	;RP1=0, select bank0
   895     007B  1431               	bsf	_LCD+1,0
   896                           
   897                           ;main.c: 151: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) LCD.DisplayControl);;
   898     007C  1205               	bcf	5,4	;volatile
   899     007D  0831               	movf	_LCD+1,w
   900     007E  227A               	fcall	_LCD_wrdata
   901                           
   902                           ;main.c: 153: uint8_t xpos = 0, ypos = 0;
   903     007F  01DB               	clrf	main@xpos
   904     0080  01DD               	clrf	main@ypos
   905     0081                     l1605:
   906                           
   907                           ;main.c: 156: key = '\0'; while (!key) { };
   908     0081  01BB               	clrf	_key
   909     0082                     l1607:
   910     0082  083B               	movf	_key,w
   911     0083  1D03               	btfss	3,2
   912     0084  28C5               	goto	l1637
   913     0085  2882               	goto	l1607
   914     0086                     l1609:
   915                           
   916                           ;main.c: 163: xpos = 0;
   917     0086  01DB               	clrf	main@xpos
   918                           
   919                           ;main.c: 164: if (!ypos) {
   920     0087  085D               	movf	main@ypos,w
   921     0088  1D03               	btfss	3,2
   922     0089  2893               	goto	l110
   923                           
   924                           ;main.c: 165: LCD_gotoxy(0, ++ypos);
   925     008A  3001               	movlw	1
   926     008B  00FF               	movwf	127
   927     008C  087F               	movf	127,w
   928     008D  07DD               	addwf	main@ypos,f
   929     008E  085D               	movf	main@ypos,w
   930     008F  00D0               	movwf	LCD_gotoxy@y
   931     0090  3000               	movlw	0
   932     0091  23AC               	fcall	_LCD_gotoxy
   933                           
   934                           ;main.c: 166: } else {
   935     0092  2881               	goto	l1605
   936     0093                     l110:
   937                           
   938                           ;main.c: 167: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) 0b00000001);; _delay((unsigned lon
      +                          g)((50)*(4000000/4000.0)));;
   939     0093  1205               	bcf	5,4	;volatile
   940     0094  3001               	movlw	1
   941     0095  227A               	fcall	_LCD_wrdata
   942     0096  3041               	movlw	65
   943     0097  1283               	bcf	3,5	;RP0=0, select bank0
   944     0098  1303               	bcf	3,6	;RP1=0, select bank0
   945     0099  00D8               	movwf	??_main+1
   946     009A  30EE               	movlw	238
   947     009B  00D7               	movwf	??_main
   948     009C                     u967:
   949     009C  0BD7               	decfsz	??_main,f
   950     009D  289C               	goto	u967
   951     009E  0BD8               	decfsz	??_main+1,f
   952     009F  289C               	goto	u967
   953                           
   954                           ;main.c: 169: LCD_gotoxy(0, 0);
   955     00A0  1283               	bcf	3,5	;RP0=0, select bank0
   956     00A1  1303               	bcf	3,6	;RP1=0, select bank0
   957     00A2  01D0               	clrf	LCD_gotoxy@y
   958     00A3  3000               	movlw	0
   959     00A4  23AC               	fcall	_LCD_gotoxy
   960                           
   961                           ;main.c: 170: LCD_puts(gameA_line_buf);
   962     00A5  303C               	movlw	(low (_gameA_line_buf| 0))& (0+255)
   963     00A6  00D1               	movwf	LCD_puts@str
   964     00A7  3000               	movlw	0
   965     00A8  00D2               	movwf	LCD_puts@str+1
   966     00A9  2364               	fcall	_LCD_puts
   967                           
   968                           ;main.c: 171: LCD_gotoxy(0, 1);
   969     00AA  01D0               	clrf	LCD_gotoxy@y
   970     00AB  0AD0               	incf	LCD_gotoxy@y,f
   971     00AC  3000               	movlw	0
   972     00AD  23AC               	fcall	_LCD_gotoxy
   973                           
   974                           ;main.c: 173: clearstr(gameA_line_buf);
   975     00AE  303C               	movlw	(low (_gameA_line_buf| 0))& (0+255)
   976     00AF  238D               	fcall	_clearstr
   977     00B0  2881               	goto	l1605
   978     00B1                     l1627:
   979                           
   980                           ;main.c: 177: if (xpos < (16 - 1)) {
   981     00B1  300F               	movlw	15
   982     00B2  025B               	subwf	main@xpos,w
   983     00B3  1803               	skipnc
   984     00B4  2881               	goto	l1605
   985                           
   986                           ;main.c: 178: LCD_putc(key);
   987     00B5  083B               	movf	_key,w
   988     00B6  23EC               	fcall	_LCD_putc
   989                           
   990                           ;main.c: 180: if (ypos) {
   991     00B7  085D               	movf	main@ypos,w
   992     00B8  1903               	btfsc	3,2
   993     00B9  28C0               	goto	l1635
   994                           
   995                           ;main.c: 181: gameA_line_buf[xpos] = key;
   996     00BA  085B               	movf	main@xpos,w
   997     00BB  3E3C               	addlw	(low (_gameA_line_buf| 0))& (0+255)
   998     00BC  0084               	movwf	4
   999     00BD  083B               	movf	_key,w
  1000     00BE  1383               	bcf	3,7	;select IRP bank0
  1001     00BF  0080               	movwf	0
  1002     00C0                     l1635:
  1003                           
  1004                           ;main.c: 182: };main.c: 184: xpos++;
  1005     00C0  3001               	movlw	1
  1006     00C1  00FF               	movwf	127
  1007     00C2  087F               	movf	127,w
  1008     00C3  07DB               	addwf	main@xpos,f
  1009     00C4  2881               	goto	l1605
  1010     00C5                     l1637:
  1011     00C5  083B               	movf	_key,w
  1012                           
  1013                           ; Switch size 1, requested type "simple"
  1014                           ; Number of cases is 2, Range of values is 35 to 42
  1015                           ; switch strategies available:
  1016                           ; Name         Instructions Cycles
  1017                           ; simple_byte            7     4 (average)
  1018                           ; direct_byte           17     9 (fixed)
  1019                           ; jumptable            263     9 (fixed)
  1020                           ;	Chosen strategy is simple_byte
  1021     00C6  3A23               	xorlw	35	; case 35
  1022     00C7  1903               	skipnz
  1023     00C8  2886               	goto	l1609
  1024     00C9  3A09               	xorlw	9	; case 42
  1025     00CA  1903               	skipnz
  1026     00CB  29B2               	goto	l1741
  1027     00CC  28B1               	goto	l1627
  1028     00CD                     l1639:
  1029                           
  1030                           ;main.c: 193: key = '\0';
  1031     00CD  01BB               	clrf	_key
  1032                           
  1033                           ;main.c: 195: i = 16 - 1;
  1034     00CE  300F               	movlw	15
  1035     00CF  00DE               	movwf	main@i
  1036     00D0                     l1643:
  1037                           
  1038                           ;main.c: 197: gameB_track[0][i] = ' ';
  1039     00D0  085E               	movf	main@i,w
  1040     00D1  3EA0               	addlw	(low (_gameB_track| 0))& (0+255)
  1041     00D2  0084               	movwf	4
  1042     00D3  3020               	movlw	32
  1043     00D4  1383               	bcf	3,7	;select IRP bank1
  1044     00D5  0080               	movwf	0
  1045                           
  1046                           ;main.c: 198: gameB_track[1][i] = ' ';
  1047     00D6  085E               	movf	main@i,w
  1048     00D7  3EB1               	addlw	(low ((_gameB_track| 0+17)))& (0+255)
  1049     00D8  0084               	movwf	4
  1050     00D9  3020               	movlw	32
  1051     00DA  0080               	movwf	0
  1052                           
  1053                           ;main.c: 199: } while (i--);
  1054     00DB  3001               	movlw	1
  1055     00DC  02DE               	subwf	main@i,f
  1056     00DD  0A5E               	incf	main@i,w
  1057     00DE  1D03               	btfss	3,2
  1058     00DF  28D0               	goto	l1643
  1059                           
  1060                           ;main.c: 201: gameB_track[0][16] = '\0';
  1061     00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1062     00E1  01B0               	clrf	(_gameB_track^(0+128)+16)
  1063                           
  1064                           ;main.c: 202: gameB_track[1][16] = '\0';
  1065     00E2  01C1               	clrf	(_gameB_track^(0+128)+33)
  1066                           
  1067                           ;main.c: 204: gameB_spd = 50;
  1068     00E3  3032               	movlw	50
  1069     00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1070     00E5  00BA               	movwf	_gameB_spd
  1071                           
  1072                           ;main.c: 205: gameB_difficulty = 16;
  1073     00E6  3010               	movlw	16
  1074     00E7  00B6               	movwf	_gameB_difficulty
  1075                           
  1076                           ;main.c: 207: union {;main.c: 208: struct {;main.c: 209: unsigned trashbin: 1;;main.c: 2
      +                          10: unsigned obstacle: 1;;main.c: 211: };;main.c: 212: uint8_t bval;;main.c: 213: } hits
      +                          ;;main.c: 215: gameB_cnt_ena = 1;
  1077     00E8  01B4               	clrf	_gameB_cnt_ena
  1078     00E9  0AB4               	incf	_gameB_cnt_ena,f
  1079     00EA                     l123:	
  1080                           ;main.c: 220: redraw:
  1081                           
  1082                           
  1083                           ;main.c: 223: hits.bval = 0;
  1084     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1085     00EB  01DC               	clrf	main@hits
  1086                           
  1087                           ;main.c: 224: i = 2;
  1088     00EC  3002               	movlw	2
  1089     00ED  00DE               	movwf	main@i
  1090     00EE  2901               	goto	l1659
  1091     00EF                     l128:	
  1092                           ;main.c: 229: case 3:
  1093                           
  1094                           
  1095                           ;main.c: 230: hits.trashbin = 1;
  1096     00EF  145C               	bsf	main@hits,0
  1097                           
  1098                           ;main.c: 231: break;
  1099     00F0  28F2               	goto	l1661
  1100     00F1                     l129:	
  1101                           ;main.c: 232: default:
  1102                           
  1103                           
  1104                           ;main.c: 233: hits.obstacle = 1;
  1105     00F1  14DC               	bsf	main@hits,1
  1106     00F2                     l1661:	
  1107                           ;main.c: 234: }
  1108                           
  1109                           
  1110                           ;main.c: 236: gameB_track[gameB_truckpos][i] = ' ';
  1111     00F2  0E38               	swapf	_gameB_truckpos,w
  1112     00F3  39F0               	andlw	240
  1113     00F4  0738               	addwf	_gameB_truckpos,w
  1114     00F5  3EA0               	addlw	(low (_gameB_track| 0))& (0+255)
  1115     00F6  075E               	addwf	main@i,w
  1116     00F7  00D7               	movwf	??_main
  1117     00F8  0857               	movf	??_main,w
  1118     00F9  0084               	movwf	4
  1119     00FA  3020               	movlw	32
  1120     00FB  0080               	movwf	0
  1121                           
  1122                           ;main.c: 237: } while (i--);
  1123     00FC  3001               	movlw	1
  1124     00FD  02DE               	subwf	main@i,f
  1125     00FE  0A5E               	incf	main@i,w
  1126     00FF  1903               	btfsc	3,2
  1127     0100  2913               	goto	l130
  1128     0101                     l1659:
  1129     0101  0E38               	swapf	_gameB_truckpos,w
  1130     0102  39F0               	andlw	240
  1131     0103  0738               	addwf	_gameB_truckpos,w
  1132     0104  3EA0               	addlw	(low (_gameB_track| 0))& (0+255)
  1133     0105  075E               	addwf	main@i,w
  1134     0106  00D7               	movwf	??_main
  1135     0107  0857               	movf	??_main,w
  1136     0108  0084               	movwf	4
  1137     0109  1383               	bcf	3,7	;select IRP bank1
  1138     010A  0800               	movf	0,w
  1139                           
  1140                           ; Switch size 1, requested type "simple"
  1141                           ; Number of cases is 2, Range of values is 3 to 32
  1142                           ; switch strategies available:
  1143                           ; Name         Instructions Cycles
  1144                           ; simple_byte            7     4 (average)
  1145                           ; direct_byte           39     9 (fixed)
  1146                           ; jumptable            263     9 (fixed)
  1147                           ;	Chosen strategy is simple_byte
  1148     010B  3A03               	xorlw	3	; case 3
  1149     010C  1903               	skipnz
  1150     010D  28EF               	goto	l128
  1151     010E  3A23               	xorlw	35	; case 32
  1152     010F  1903               	skipnz
  1153     0110  28F2               	goto	l1661
  1154     0111  28F1               	goto	l129
  1155     0112  28F2               	goto	l1661
  1156     0113                     l130:
  1157                           
  1158                           ;main.c: 239: if (hits.obstacle) {
  1159     0113  1CDC               	btfss	main@hits,1
  1160     0114  293A               	goto	l131
  1161                           
  1162                           ;main.c: 242: _beep(240, 120);
  1163     0115  3078               	movlw	120
  1164     0116  00CD               	movwf	__beep@CCPR1L_val
  1165     0117  30F0               	movlw	240
  1166     0118  23BB               	fcall	__beep
  1167                           
  1168                           ;main.c: 243: flash_lcd = 1;
  1169     0119  01B5               	clrf	_flash_lcd
  1170     011A  0AB5               	incf	_flash_lcd,f
  1171                           
  1172                           ;main.c: 244: gameB_cnt_ena = 0;
  1173     011B  01B4               	clrf	_gameB_cnt_ena
  1174                           
  1175                           ;main.c: 245: _delay((unsigned long)((800)*(4000000/4000.0)));
  1176     011C  3005               	movlw	5
  1177     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1178     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1179     011F  00D9               	movwf	??_main+2
  1180     0120  300F               	movlw	15
  1181     0121  00D8               	movwf	??_main+1
  1182     0122  30F0               	movlw	240
  1183     0123  00D7               	movwf	??_main
  1184     0124                     u977:
  1185     0124  0BD7               	decfsz	??_main,f
  1186     0125  2924               	goto	u977
  1187     0126  0BD8               	decfsz	??_main+1,f
  1188     0127  2924               	goto	u977
  1189     0128  0BD9               	decfsz	??_main+2,f
  1190     0129  2924               	goto	u977
  1191     012A  292B               	nop2
  1192                           
  1193                           ;main.c: 246: gameB_cnt_ena = 1;
  1194     012B  1283               	bcf	3,5	;RP0=0, select bank0
  1195     012C  1303               	bcf	3,6	;RP1=0, select bank0
  1196     012D  01B4               	clrf	_gameB_cnt_ena
  1197     012E  0AB4               	incf	_gameB_cnt_ena,f
  1198                           
  1199                           ;main.c: 247: flash_lcd = 0;
  1200     012F  01B5               	clrf	_flash_lcd
  1201                           
  1202                           ;main.c: 248: PORTBbits.RB2 = 1;
  1203     0130  1506               	bsf	6,2	;volatile
  1204                           
  1205                           ;main.c: 249: if (gameB_spd < 50) gameB_spd++;
  1206     0131  3032               	movlw	50
  1207     0132  023A               	subwf	_gameB_spd,w
  1208     0133  1803               	skipnc
  1209     0134  294E               	goto	l1693
  1210     0135  3001               	movlw	1
  1211     0136  00FF               	movwf	127
  1212     0137  087F               	movf	127,w
  1213     0138  07BA               	addwf	_gameB_spd,f
  1214     0139  294E               	goto	l1693
  1215     013A                     l131:
  1216     013A  1C5C               	btfss	main@hits,0
  1217     013B  294E               	goto	l1693
  1218                           
  1219                           ;main.c: 251: _beep(60, 30);
  1220     013C  301E               	movlw	30
  1221     013D  00CD               	movwf	__beep@CCPR1L_val
  1222     013E  303C               	movlw	60
  1223     013F  23BB               	fcall	__beep
  1224                           
  1225                           ;main.c: 252: gameB_difficulty -= 2;
  1226     0140  3002               	movlw	2
  1227     0141  02B6               	subwf	_gameB_difficulty,f
  1228                           
  1229                           ;main.c: 253: if (gameB_difficulty == 6) {
  1230     0142  3006               	movlw	6
  1231     0143  0636               	xorwf	_gameB_difficulty,w
  1232     0144  1D03               	btfss	3,2
  1233     0145  294E               	goto	l1693
  1234                           
  1235                           ;main.c: 254: gameB_difficulty = 16;
  1236     0146  3010               	movlw	16
  1237     0147  00B6               	movwf	_gameB_difficulty
  1238                           
  1239                           ;main.c: 255: if (gameB_spd > 20) gameB_spd--;
  1240     0148  3015               	movlw	21
  1241     0149  023A               	subwf	_gameB_spd,w
  1242     014A  1C03               	skipc
  1243     014B  294E               	goto	l1693
  1244     014C  3001               	movlw	1
  1245     014D  02BA               	subwf	_gameB_spd,f
  1246     014E                     l1693:
  1247                           
  1248                           ;main.c: 256: };main.c: 257: };main.c: 260: LCD_gotoxy(0, 0);
  1249     014E  01D0               	clrf	LCD_gotoxy@y
  1250     014F  3000               	movlw	0
  1251     0150  23AC               	fcall	_LCD_gotoxy
  1252                           
  1253                           ;main.c: 261: LCD_puts(gameB_track[0]);
  1254     0151  30A0               	movlw	(low (_gameB_track| 0))& (0+255)
  1255     0152  00D1               	movwf	LCD_puts@str
  1256     0153  3000               	movlw	0
  1257     0154  00D2               	movwf	LCD_puts@str+1
  1258     0155  2364               	fcall	_LCD_puts
  1259                           
  1260                           ;main.c: 262: LCD_gotoxy(0, 1);
  1261     0156  01D0               	clrf	LCD_gotoxy@y
  1262     0157  0AD0               	incf	LCD_gotoxy@y,f
  1263     0158  3000               	movlw	0
  1264     0159  23AC               	fcall	_LCD_gotoxy
  1265                           
  1266                           ;main.c: 263: LCD_puts(gameB_track[1]);
  1267     015A  30B1               	movlw	(low ((_gameB_track| 0+17)))& (0+255)
  1268     015B  00D1               	movwf	LCD_puts@str
  1269     015C  3000               	movlw	0
  1270     015D  00D2               	movwf	LCD_puts@str+1
  1271     015E  2364               	fcall	_LCD_puts
  1272                           
  1273                           ;main.c: 265: LCD_gotoxy(0, gameB_truckpos);
  1274     015F  0838               	movf	_gameB_truckpos,w
  1275     0160  00D0               	movwf	LCD_gotoxy@y
  1276     0161  3000               	movlw	0
  1277     0162  23AC               	fcall	_LCD_gotoxy
  1278                           
  1279                           ;main.c: 266: LCD_putc(0);
  1280     0163  3000               	movlw	0
  1281     0164  23EC               	fcall	_LCD_putc
  1282                           
  1283                           ;main.c: 267: LCD_putc(1);
  1284     0165  3001               	movlw	1
  1285     0166  23EC               	fcall	_LCD_putc
  1286                           
  1287                           ;main.c: 268: LCD_putc(2);
  1288     0167  3002               	movlw	2
  1289     0168  23EC               	fcall	_LCD_putc
  1290     0169                     l137:	
  1291                           ;main.c: 270: do {
  1292                           
  1293                           
  1294                           ;main.c: 271: if (key) {
  1295     0169  083B               	movf	_key,w
  1296     016A  1903               	btfsc	3,2
  1297     016B  2980               	goto	l1719
  1298                           
  1299                           ;main.c: 272: uint8_t _key = key;
  1300     016C  083B               	movf	_key,w
  1301     016D  00DA               	movwf	main@_key
  1302                           
  1303                           ;main.c: 273: key = '\0';
  1304     016E  01BB               	clrf	_key
  1305                           
  1306                           ;main.c: 275: switch(_key) {
  1307     016F  2975               	goto	l1717
  1308     0170                     l1713:
  1309                           
  1310                           ;main.c: 280: gameB_truckpos = 0;
  1311     0170  01B8               	clrf	_gameB_truckpos
  1312                           
  1313                           ;main.c: 281: goto redraw;
  1314     0171  28EA               	goto	l123
  1315     0172                     l142:	
  1316                           ;main.c: 283: case 'B':
  1317                           
  1318                           
  1319                           ;main.c: 284: gameB_truckpos = 1;
  1320     0172  01B8               	clrf	_gameB_truckpos
  1321     0173  0AB8               	incf	_gameB_truckpos,f
  1322                           
  1323                           ;main.c: 285: goto redraw;
  1324     0174  28EA               	goto	l123
  1325     0175                     l1717:
  1326     0175  085A               	movf	main@_key,w
  1327                           
  1328                           ; Switch size 1, requested type "simple"
  1329                           ; Number of cases is 3, Range of values is 42 to 66
  1330                           ; switch strategies available:
  1331                           ; Name         Instructions Cycles
  1332                           ; simple_byte           10     6 (average)
  1333                           ; direct_byte           34     9 (fixed)
  1334                           ; jumptable            263     9 (fixed)
  1335                           ;	Chosen strategy is simple_byte
  1336     0176  3A2A               	xorlw	42	; case 42
  1337     0177  1903               	skipnz
  1338     0178  29B2               	goto	l1741
  1339     0179  3A6B               	xorlw	107	; case 65
  1340     017A  1903               	skipnz
  1341     017B  2970               	goto	l1713
  1342     017C  3A03               	xorlw	3	; case 66
  1343     017D  1903               	skipnz
  1344     017E  2972               	goto	l142
  1345     017F  2980               	goto	l1719
  1346     0180                     l1719:
  1347                           
  1348                           ;main.c: 287: };main.c: 288: } while (gameB_spd_cnt);
  1349     0180  0839               	movf	_gameB_spd_cnt,w
  1350     0181  1D03               	btfss	3,2
  1351     0182  2969               	goto	l137
  1352                           
  1353                           ;main.c: 290: gameB_spd_cnt = gameB_spd;
  1354     0183  083A               	movf	_gameB_spd,w
  1355     0184  00B9               	movwf	_gameB_spd_cnt
  1356                           
  1357                           ;main.c: 293: for (i = 0; i < 15; i++) {
  1358     0185  01DE               	clrf	main@i
  1359     0186                     l1729:
  1360                           
  1361                           ;main.c: 294: gameB_track[0][i] = gameB_track[0][i + 1];
  1362     0186  085E               	movf	main@i,w
  1363     0187  3EA1               	addlw	(low ((_gameB_track| 0+1)))& (0+255)
  1364     0188  0084               	movwf	4
  1365     0189  1383               	bcf	3,7	;select IRP bank1
  1366     018A  0800               	movf	0,w
  1367     018B  00FF               	movwf	127
  1368     018C  085E               	movf	main@i,w
  1369     018D  3EA0               	addlw	(low (_gameB_track| 0))& (0+255)
  1370     018E  0084               	movwf	4
  1371     018F  087F               	movf	127,w
  1372     0190  0080               	movwf	0
  1373                           
  1374                           ;main.c: 295: gameB_track[1][i] = gameB_track[1][i + 1];
  1375     0191  085E               	movf	main@i,w
  1376     0192  3EB2               	addlw	(low ((_gameB_track| 0+18)))& (0+255)
  1377     0193  0084               	movwf	4
  1378     0194  0800               	movf	0,w
  1379     0195  00FF               	movwf	127
  1380     0196  085E               	movf	main@i,w
  1381     0197  3EB1               	addlw	(low ((_gameB_track| 0+17)))& (0+255)
  1382     0198  0084               	movwf	4
  1383     0199  087F               	movf	127,w
  1384     019A  0080               	movwf	0
  1385     019B  3001               	movlw	1
  1386     019C  00FF               	movwf	127
  1387     019D  087F               	movf	127,w
  1388     019E  07DE               	addwf	main@i,f
  1389     019F  300F               	movlw	15
  1390     01A0  025E               	subwf	main@i,w
  1391     01A1  1C03               	skipc
  1392     01A2  2986               	goto	l1729
  1393                           
  1394                           ;main.c: 296: };main.c: 299: gameB_track[0][15] = rand_tile();
  1395     01A3  2333               	fcall	_rand_tile
  1396     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1397     01A5  00AF               	movwf	(_gameB_track^(0+128)+15)
  1398                           
  1399                           ;main.c: 300: gameB_track[1][15] = rand_tile();
  1400     01A6  2333               	fcall	_rand_tile
  1401     01A7  1683               	bsf	3,5	;RP0=1, select bank1
  1402     01A8  00C0               	movwf	(_gameB_track^(0+128)+32)
  1403     01A9  28EA               	goto	l123
  1404     01AA                     l1739:
  1405     01AA  083B               	movf	_key,w
  1406                           
  1407                           ; Switch size 1, requested type "simple"
  1408                           ; Number of cases is 2, Range of values is 65 to 66
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte            7     4 (average)
  1412                           ; direct_byte           11     9 (fixed)
  1413                           ; jumptable            263     9 (fixed)
  1414                           ;	Chosen strategy is simple_byte
  1415     01AB  3A41               	xorlw	65	; case 65
  1416     01AC  1903               	skipnz
  1417     01AD  286C               	goto	l101
  1418     01AE  3A03               	xorlw	3	; case 66
  1419     01AF  1903               	skipnz
  1420     01B0  28CD               	goto	l1639
  1421     01B1  2867               	goto	l1587
  1422     01B2                     l1741:
  1423                           
  1424                           ;main.c: 312: LCD.DisplayControl &= 0b11111101 & 0b11111110;
  1425     01B2  30FC               	movlw	252
  1426     01B3  00FF               	movwf	127
  1427     01B4  087F               	movf	127,w
  1428     01B5  05B1               	andwf	_LCD+1,f
  1429                           
  1430                           ;main.c: 313: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) LCD.DisplayControl);;
  1431     01B6  1205               	bcf	5,4	;volatile
  1432     01B7  0831               	movf	_LCD+1,w
  1433     01B8  227A               	fcall	_LCD_wrdata
  1434                           
  1435                           ;main.c: 315: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) 0b00000001);; _delay((unsigned lon
      +                          g)((50)*(4000000/4000.0)));;
  1436     01B9  1205               	bcf	5,4	;volatile
  1437     01BA  3001               	movlw	1
  1438     01BB  227A               	fcall	_LCD_wrdata
  1439     01BC  3041               	movlw	65
  1440     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1441     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1442     01BF  00D8               	movwf	??_main+1
  1443     01C0  30EE               	movlw	238
  1444     01C1  00D7               	movwf	??_main
  1445     01C2                     u987:
  1446     01C2  0BD7               	decfsz	??_main,f
  1447     01C3  29C2               	goto	u987
  1448     01C4  0BD8               	decfsz	??_main+1,f
  1449     01C5  29C2               	goto	u987
  1450     01C6  2854               	goto	l1579
  1451     01C7                     __end_of_main:
  1452                           
  1453                           	psect	text1
  1454     0333                     __ptext1:	
  1455 ;; *************** function _rand_tile *****************
  1456 ;; Defined at:
  1457 ;;		line 409 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  res             1    6[BANK0 ] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 200/0
  1468 ;;		On exit  : 300/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1471 ;;      Params:         0       0       0       0
  1472 ;;      Locals:         0       1       0       0
  1473 ;;      Temps:          0       0       0       0
  1474 ;;      Totals:         0       1       0       0
  1475 ;;Total ram usage:        1 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 4
  1478 ;; This function calls:
  1479 ;;		___eetoc
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485     0333                     _rand_tile:	
  1486                           ;psect for function _rand_tile
  1487                           
  1488                           
  1489                           ;main.c: 411: if (gameB_obstacle_delay) {
  1490                           
  1491                           ;incstack = 0
  1492                           ; Regs used in _rand_tile: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1493     0333  1283               	bcf	3,5	;RP0=0, select bank0
  1494     0334  0837               	movf	_gameB_obstacle_delay,w
  1495     0335  1903               	btfsc	3,2
  1496     0336  2B3B               	goto	l1511
  1497                           
  1498                           ;main.c: 412: gameB_obstacle_delay--;
  1499     0337  3001               	movlw	1
  1500     0338  02B7               	subwf	_gameB_obstacle_delay,f
  1501                           
  1502                           ;main.c: 413: return ' ';
  1503     0339  3020               	movlw	32
  1504     033A  0008               	return
  1505     033B                     l1511:
  1506                           
  1507                           ;main.c: 414: };main.c: 416: static uint8_t psrand_seed;;main.c: 417: uint8_t res = (TMR
      +                          0 ^ TMR2 ^ psrand_seed) & 0x03;
  1508     033B  0801               	movf	1,w	;volatile
  1509     033C  0611               	xorwf	17,w	;volatile
  1510     033D  0632               	xorwf	rand_tile@psrand_seed,w
  1511     033E  3903               	andlw	3
  1512     033F  00D3               	movwf	rand_tile@res
  1513                           
  1514                           ;main.c: 419: psrand_seed = res;
  1515     0340  0853               	movf	rand_tile@res,w
  1516     0341  00B2               	movwf	rand_tile@psrand_seed
  1517                           
  1518                           ;main.c: 421: if (res > 1) {
  1519     0342  3002               	movlw	2
  1520     0343  0253               	subwf	rand_tile@res,w
  1521     0344  1C03               	skipc
  1522     0345  2B48               	goto	l1519
  1523                           
  1524                           ;main.c: 422: gameB_obstacle_delay = gameB_difficulty;
  1525     0346  0836               	movf	_gameB_difficulty,w
  1526     0347  00B7               	movwf	_gameB_obstacle_delay
  1527     0348                     l1519:
  1528                           
  1529                           ;main.c: 423: };main.c: 425: return tile_set[res];
  1530     0348  0853               	movf	rand_tile@res,w
  1531     0349  3E41               	addlw	low _tile_set
  1532     034A  23D5               	fcall	___eetoc
  1533     034B  0008               	return
  1534     034C                     __end_of_rand_tile:
  1535                           
  1536                           	psect	text2
  1537     0379                     __ptext2:	
  1538 ;; *************** function _init *****************
  1539 ;; Defined at:
  1540 ;;		line 443 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2
  1549 ;; Tracked objects:
  1550 ;;		On entry : B00/0
  1551 ;;		On exit  : B00/0
  1552 ;;		Unchanged: 800/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1554 ;;      Params:         0       0       0       0
  1555 ;;      Locals:         0       0       0       0
  1556 ;;      Temps:          0       0       0       0
  1557 ;;      Totals:         0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 2
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568     0379                     _init:	
  1569                           ;psect for function _init
  1570                           
  1571                           
  1572                           ;main.c: 446: PCONbits.OSCF = 1;
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _init: [wreg+status,2]
  1576     0379  1683               	bsf	3,5	;RP0=1, select bank1
  1577     037A  158E               	bsf	14,3	;volatile
  1578                           
  1579                           ;main.c: 449: CMCON = 7;
  1580     037B  3007               	movlw	7
  1581     037C  1283               	bcf	3,5	;RP0=0, select bank0
  1582     037D  009F               	movwf	31	;volatile
  1583                           
  1584                           ;main.c: 452: TRISA = 0x0c;
  1585     037E  300C               	movlw	12
  1586     037F  1683               	bsf	3,5	;RP0=1, select bank1
  1587     0380  0085               	movwf	5	;volatile
  1588                           
  1589                           ;main.c: 456: TRISB = 0xf0;
  1590     0381  30F0               	movlw	240
  1591     0382  0086               	movwf	6	;volatile
  1592                           
  1593                           ;main.c: 460: OPTION_REG = 0x85;
  1594     0383  3085               	movlw	133
  1595     0384  0081               	movwf	1	;volatile
  1596                           
  1597                           ;main.c: 465: CCPR1L = 0;
  1598     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1599     0386  0195               	clrf	21	;volatile
  1600                           
  1601                           ;main.c: 466: CCP1CON = 0x0C;
  1602     0387  300C               	movlw	12
  1603     0388  0097               	movwf	23	;volatile
  1604                           
  1605                           ;main.c: 467: T2CON = 0x07;
  1606     0389  3007               	movlw	7
  1607     038A  0092               	movwf	18	;volatile
  1608                           
  1609                           ;main.c: 470: PORTBbits.RB2 = 1;
  1610     038B  1506               	bsf	6,2	;volatile
  1611     038C  0008               	return
  1612     038D                     __end_of_init:
  1613                           
  1614                           	psect	text3
  1615     038D                     __ptext3:	
  1616 ;; *************** function _clearstr *****************
  1617 ;; Defined at:
  1618 ;;		line 433 in file "main.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  str             1    wreg     PTR unsigned char 
  1621 ;;		 -> gameA_line_buf(17), 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  str             1    0[BANK0 ] PTR unsigned char 
  1624 ;;		 -> gameA_line_buf(17), 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1629 ;; Tracked objects:
  1630 ;;		On entry : 300/0
  1631 ;;		On exit  : B00/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1634 ;;      Params:         0       0       0       0
  1635 ;;      Locals:         0       1       0       0
  1636 ;;      Temps:          0       0       0       0
  1637 ;;      Totals:         0       1       0       0
  1638 ;;Total ram usage:        1 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 2
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648     038D                     _clearstr:	
  1649                           ;psect for function _clearstr
  1650                           
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _clearstr: [wreg-fsr0h+status,2+status,0+btemp+1]
  1654                           ;clearstr@str stored from wreg
  1655     038D  00CD               	movwf	clearstr@str
  1656     038E                     l1495:	
  1657                           ;main.c: 434: while (*str) {
  1658                           
  1659     038E  084D               	movf	clearstr@str,w
  1660     038F  0084               	movwf	4
  1661     0390  1383               	bcf	3,7	;select IRP bank0
  1662     0391  0800               	movf	0,w
  1663     0392  1903               	btfsc	3,2
  1664     0393  0008               	return
  1665                           
  1666                           ;main.c: 435: *str = ' ';
  1667     0394  084D               	movf	clearstr@str,w
  1668     0395  0084               	movwf	4
  1669     0396  3020               	movlw	32
  1670     0397  0080               	movwf	0
  1671                           
  1672                           ;main.c: 436: str++;
  1673     0398  3001               	movlw	1
  1674     0399  00FF               	movwf	127
  1675     039A  087F               	movf	127,w
  1676     039B  07CD               	addwf	clearstr@str,f
  1677     039C  2B8E               	goto	l1495
  1678     039D                     __end_of_clearstr:
  1679                           
  1680                           	psect	text4
  1681     03BB                     __ptext4:	
  1682 ;; *************** function __beep *****************
  1683 ;; Defined at:
  1684 ;;		line 392 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  PR2_val         1    wreg     unsigned char 
  1687 ;;  CCPR1L_val      1    0[BANK0 ] unsigned char 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  PR2_val         1    1[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : B00/0
  1696 ;;		On exit  : B00/0
  1697 ;;		Unchanged: 800/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1699 ;;      Params:         0       1       0       0
  1700 ;;      Locals:         0       1       0       0
  1701 ;;      Temps:          0       0       0       0
  1702 ;;      Totals:         0       2       0       0
  1703 ;;Total ram usage:        2 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 2
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713     03BB                     __beep:	
  1714                           ;psect for function __beep
  1715                           
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in __beep: [wreg+status,2+status,0]
  1719                           ;__beep@PR2_val stored from wreg
  1720     03BB  00CE               	movwf	__beep@PR2_val
  1721                           
  1722                           ;main.c: 395: if (CCPR1L) return;
  1723     03BC  0815               	movf	21,w	;volatile
  1724     03BD  1D03               	btfss	3,2
  1725     03BE  0008               	return
  1726                           
  1727                           ;main.c: 398: beep_delay = 6;
  1728     03BF  3006               	movlw	6
  1729     03C0  00FD               	movwf	_beep_delay
  1730                           
  1731                           ;main.c: 399: PR2 = PR2_val;
  1732     03C1  084E               	movf	__beep@PR2_val,w
  1733     03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1734     03C3  0092               	movwf	18	;volatile
  1735                           
  1736                           ;main.c: 400: CCPR1L = CCPR1L_val;
  1737     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1738     03C5  084D               	movf	__beep@CCPR1L_val,w
  1739     03C6  0095               	movwf	21	;volatile
  1740     03C7  0008               	return
  1741     03C8                     __end_of__beep:
  1742                           
  1743                           	psect	text5
  1744     0318                     __ptext5:	
  1745 ;; *************** function _LCD_wr_custom_char *****************
  1746 ;; Defined at:
  1747 ;;		line 109 in file "lcd_hd44780.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  code            1    wreg     unsigned char 
  1750 ;;  dataarr         1    6[BANK0 ] PTR const unsigned char 
  1751 ;;		 -> eeprom_cgram_data(48), 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  code            1    8[BANK0 ] unsigned char 
  1754 ;;  cnt             1    9[BANK0 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 300/0
  1761 ;;		On exit  : 300/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1764 ;;      Params:         0       1       0       0
  1765 ;;      Locals:         0       2       0       0
  1766 ;;      Temps:          0       1       0       0
  1767 ;;      Totals:         0       4       0       0
  1768 ;;Total ram usage:        4 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 5
  1771 ;; This function calls:
  1772 ;;		_LCD_putc
  1773 ;;		_LCD_set_cgram_addr
  1774 ;;		___eetoc
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780     0318                     _LCD_wr_custom_char:	
  1781                           ;psect for function _LCD_wr_custom_char
  1782                           
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _LCD_wr_custom_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1786                           ;LCD_wr_custom_char@code stored from wreg
  1787     0318  00D5               	movwf	LCD_wr_custom_char@code
  1788                           
  1789                           ;lcd_hd44780.c: 110: LCD_set_cgram_addr(code << 3);
  1790     0319  0855               	movf	LCD_wr_custom_char@code,w
  1791     031A  00D4               	movwf	??_LCD_wr_custom_char
  1792     031B  3002               	movlw	2
  1793     031C                     u545:
  1794     031C  1003               	clrc
  1795     031D  0DD4               	rlf	??_LCD_wr_custom_char,f
  1796     031E  3EFF               	addlw	-1
  1797     031F  1D03               	skipz
  1798     0320  2B1C               	goto	u545
  1799     0321  1003               	clrc
  1800     0322  0D54               	rlf	??_LCD_wr_custom_char,w
  1801     0323  23E6               	fcall	_LCD_set_cgram_addr
  1802                           
  1803                           ;lcd_hd44780.c: 112: uint8_t cnt = 7;
  1804     0324  3007               	movlw	7
  1805     0325  00D6               	movwf	LCD_wr_custom_char@cnt
  1806     0326                     l1471:
  1807                           
  1808                           ;lcd_hd44780.c: 114: LCD_putc(*dataarr++);
  1809     0326  0853               	movf	LCD_wr_custom_char@dataarr,w
  1810     0327  23D5               	fcall	___eetoc
  1811     0328  23EC               	fcall	_LCD_putc
  1812     0329  3001               	movlw	1
  1813     032A  00FF               	movwf	127
  1814     032B  087F               	movf	127,w
  1815     032C  07D3               	addwf	LCD_wr_custom_char@dataarr,f
  1816                           
  1817                           ;lcd_hd44780.c: 115: } while (cnt--);
  1818     032D  3001               	movlw	1
  1819     032E  02D6               	subwf	LCD_wr_custom_char@cnt,f
  1820     032F  0A56               	incf	LCD_wr_custom_char@cnt,w
  1821     0330  1903               	btfsc	3,2
  1822     0331  0008               	return
  1823     0332  2B26               	goto	l1471
  1824     0333                     __end_of_LCD_wr_custom_char:
  1825                           
  1826                           	psect	text6
  1827     03D5                     __ptext6:	
  1828 ;; *************** function ___eetoc *****************
  1829 ;; Defined at:
  1830 ;;		line 104 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeprom.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  addr            1    wreg     PTR eeprom void 
  1833 ;;		 -> tile_set(4), eeprom_cgram_data(48), eeprom_keys(17), 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  addr            1    4[BANK0 ] PTR eeprom void 
  1836 ;;		 -> tile_set(4), eeprom_cgram_data(48), eeprom_keys(17), 
  1837 ;;  data            1    5[BANK0 ] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      unsigned char 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 300/0
  1844 ;;		On exit  : 300/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1847 ;;      Params:         0       0       0       0
  1848 ;;      Locals:         0       2       0       0
  1849 ;;      Temps:          0       0       0       0
  1850 ;;      Totals:         0       2       0       0
  1851 ;;Total ram usage:        2 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 3
  1854 ;; This function calls:
  1855 ;;		___eecpymem
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;;		_rand_tile
  1859 ;;		_LCD_wr_custom_char
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863     03D5                     ___eetoc:	
  1864                           ;psect for function ___eetoc
  1865                           
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in ___eetoc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1869                           ;___eetoc@addr stored from wreg
  1870     03D5  00D1               	movwf	___eetoc@addr
  1871                           
  1872                           ;__eeprom.c: 106: unsigned char data;;__eeprom.c: 107: __eecpymem((unsigned char *) &dat
      +                          a,addr,1);
  1873     03D6  0851               	movf	___eetoc@addr,w
  1874     03D7  00CD               	movwf	___eecpymem@from
  1875     03D8  01CE               	clrf	___eecpymem@size
  1876     03D9  0ACE               	incf	___eecpymem@size,f
  1877     03DA  3052               	movlw	(low (___eetoc@data| 0))& (0+255)
  1878     03DB  22A9               	fcall	___eecpymem
  1879                           
  1880                           ;__eeprom.c: 108: return data;
  1881     03DC  0852               	movf	___eetoc@data,w
  1882     03DD  0008               	return
  1883     03DE                     __end_of___eetoc:
  1884                           
  1885                           	psect	text7
  1886     02A9                     __ptext7:	
  1887 ;; *************** function ___eecpymem *****************
  1888 ;; Defined at:
  1889 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\pic\__eeprom.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  to              1    wreg     PTR volatile unsigned ch
  1892 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
  1893 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  1894 ;;  from            1    0[BANK0 ] PTR eeprom unsigned char
  1895 ;;		 -> tile_set(4), eeprom_cgram_data(48), eeprom_keys(17), 
  1896 ;;  size            1    1[BANK0 ] unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  to              1    3[BANK0 ] PTR volatile unsigned ch
  1899 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
  1900 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  1901 ;;  cp              1    2[BANK0 ] PTR volatile unsigned ch
  1902 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
  1903 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1908 ;; Tracked objects:
  1909 ;;		On entry : 300/0
  1910 ;;		On exit  : 300/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1913 ;;      Params:         0       2       0       0
  1914 ;;      Locals:         0       2       0       0
  1915 ;;      Temps:          0       0       0       0
  1916 ;;      Totals:         0       4       0       0
  1917 ;;Total ram usage:        4 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 2
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		___eetoc
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927     02A9                     ___eecpymem:	
  1928                           ;psect for function ___eecpymem
  1929                           
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in ___eecpymem: [wreg-fsr0h+status,2+status,0+btemp+1]
  1933                           ;___eecpymem@to stored from wreg
  1934     02A9  00D0               	movwf	___eecpymem@to
  1935                           
  1936                           ;__eeprom.c: 8: volatile unsigned char *cp = to;
  1937     02AA  0850               	movf	___eecpymem@to,w
  1938     02AB  00CF               	movwf	___eecpymem@cp
  1939     02AC                     l272:	
  1940                           ;__eeprom.c: 10: while (EECON1bits.WR) continue;
  1941                           
  1942     02AC  1683               	bsf	3,5	;RP0=1, select bank1
  1943     02AD  189C               	btfsc	28,1	;volsfr
  1944     02AE  2AAC               	goto	l272
  1945                           
  1946                           ;__eeprom.c: 11: EEADR = (unsigned char)from;
  1947     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1948     02B0  084D               	movf	___eecpymem@from,w
  1949     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1950     02B2  009B               	movwf	27	;volatile
  1951     02B3                     l1387:	
  1952                           ;__eeprom.c: 12: while(size--) {
  1953                           
  1954     02B3  3001               	movlw	1
  1955     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1956     02B5  02CE               	subwf	___eecpymem@size,f
  1957     02B6  0A4E               	incf	___eecpymem@size,w
  1958     02B7  1903               	btfsc	3,2
  1959     02B8  0008               	return
  1960     02B9                     l277:
  1961     02B9  1683               	bsf	3,5	;RP0=1, select bank1
  1962     02BA  189C               	btfsc	28,1	;volsfr
  1963     02BB  2AB9               	goto	l277
  1964                           
  1965                           ;__eeprom.c: 15: EECON1 &= 0x7F;
  1966     02BC  307F               	movlw	127
  1967     02BD  00FF               	movwf	127
  1968     02BE  087F               	movf	127,w
  1969     02BF  059C               	andwf	28,f	;volsfr
  1970                           
  1971                           ;__eeprom.c: 17: EECON1bits.RD = 1;
  1972     02C0  141C               	bsf	28,0	;volsfr
  1973                           
  1974                           ;__eeprom.c: 18: *cp++ = EEDATA;
  1975     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1976     02C2  084F               	movf	___eecpymem@cp,w
  1977     02C3  0084               	movwf	4
  1978     02C4  1683               	bsf	3,5	;RP0=1, select bank1
  1979     02C5  081A               	movf	26,w	;volatile
  1980     02C6  1383               	bcf	3,7	;select IRP bank0
  1981     02C7  0080               	movwf	0
  1982     02C8  3001               	movlw	1
  1983     02C9  00FF               	movwf	127
  1984     02CA  087F               	movf	127,w
  1985     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1986     02CC  07CF               	addwf	___eecpymem@cp,f
  1987                           
  1988                           ;__eeprom.c: 19: ++EEADR;
  1989     02CD  3001               	movlw	1
  1990     02CE  00FF               	movwf	127
  1991     02CF  087F               	movf	127,w
  1992     02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1993     02D1  079B               	addwf	27,f	;volatile
  1994     02D2  2AB3               	goto	l1387
  1995     02D3                     __end_of___eecpymem:
  1996                           
  1997                           	psect	text8
  1998     03E6                     __ptext8:	
  1999 ;; *************** function _LCD_set_cgram_addr *****************
  2000 ;; Defined at:
  2001 ;;		line 90 in file "lcd_hd44780.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  addr            1    wreg     unsigned char 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  addr            1    3[BANK0 ] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 300/0
  2012 ;;		On exit  : 300/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2015 ;;      Params:         0       0       0       0
  2016 ;;      Locals:         0       1       0       0
  2017 ;;      Temps:          0       0       0       0
  2018 ;;      Totals:         0       1       0       0
  2019 ;;Total ram usage:        1 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 4
  2022 ;; This function calls:
  2023 ;;		_LCD_wrdata
  2024 ;; This function is called by:
  2025 ;;		_LCD_wr_custom_char
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029     03E6                     _LCD_set_cgram_addr:	
  2030                           ;psect for function _LCD_set_cgram_addr
  2031                           
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _LCD_set_cgram_addr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2035                           ;LCD_set_cgram_addr@addr stored from wreg
  2036     03E6  00D0               	movwf	LCD_set_cgram_addr@addr
  2037                           
  2038                           ;lcd_hd44780.c: 91: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) 0b01000000 | addr);;
  2039     03E7  1205               	bcf	5,4	;volatile
  2040     03E8  0850               	movf	LCD_set_cgram_addr@addr,w
  2041     03E9  3840               	iorlw	64
  2042     03EA  227A               	fcall	_LCD_wrdata
  2043     03EB  0008               	return
  2044     03EC                     __end_of_LCD_set_cgram_addr:
  2045                           
  2046                           	psect	text9
  2047     0364                     __ptext9:	
  2048 ;; *************** function _LCD_puts *****************
  2049 ;; Defined at:
  2050 ;;		line 98 in file "lcd_hd44780.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  2053 ;;		 -> gameB_track(34), STR_2(7), STR_1(14), gameA_line_buf(17), 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 300/0
  2062 ;;		On exit  : 300/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2065 ;;      Params:         0       2       0       0
  2066 ;;      Locals:         0       0       0       0
  2067 ;;      Temps:          0       0       0       0
  2068 ;;      Totals:         0       2       0       0
  2069 ;;Total ram usage:        2 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 5
  2072 ;; This function calls:
  2073 ;;		_LCD_putc
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079     0364                     _LCD_puts:	
  2080                           ;psect for function _LCD_puts
  2081                           
  2082     0364                     l1487:	
  2083                           ;lcd_hd44780.c: 99: while (*str) {
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2087                           
  2088     0364  0852               	movf	LCD_puts@str+1,w
  2089     0365  00FF               	movwf	127
  2090     0366  0851               	movf	LCD_puts@str,w
  2091     0367  0084               	movwf	4
  2092     0368  22D3               	fcall	stringtab
  2093     0369  3A00               	xorlw	0
  2094     036A  1903               	btfsc	3,2
  2095     036B  0008               	return
  2096                           
  2097                           ;lcd_hd44780.c: 100: LCD_putc(*str++);
  2098     036C  0852               	movf	LCD_puts@str+1,w
  2099     036D  00FF               	movwf	127
  2100     036E  0851               	movf	LCD_puts@str,w
  2101     036F  0084               	movwf	4
  2102     0370  22D3               	fcall	stringtab
  2103     0371  23EC               	fcall	_LCD_putc
  2104     0372  3001               	movlw	1
  2105     0373  07D1               	addwf	LCD_puts@str,f
  2106     0374  1803               	skipnc
  2107     0375  0AD2               	incf	LCD_puts@str+1,f
  2108     0376  3000               	movlw	0
  2109     0377  07D2               	addwf	LCD_puts@str+1,f
  2110     0378  2B64               	goto	l1487
  2111     0379                     __end_of_LCD_puts:
  2112                           
  2113                           	psect	text10
  2114     03EC                     __ptext10:	
  2115 ;; *************** function _LCD_putc *****************
  2116 ;; Defined at:
  2117 ;;		line 104 in file "lcd_hd44780.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  chr             1    wreg     unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  chr             1    3[BANK0 ] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 300/0
  2128 ;;		On exit  : 300/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2131 ;;      Params:         0       0       0       0
  2132 ;;      Locals:         0       1       0       0
  2133 ;;      Temps:          0       0       0       0
  2134 ;;      Totals:         0       1       0       0
  2135 ;;Total ram usage:        1 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 4
  2138 ;; This function calls:
  2139 ;;		_LCD_wrdata
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;;		_LCD_puts
  2143 ;;		_LCD_wr_custom_char
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147     03EC                     _LCD_putc:	
  2148                           ;psect for function _LCD_putc
  2149                           
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _LCD_putc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2153                           ;LCD_putc@chr stored from wreg
  2154     03EC  00D0               	movwf	LCD_putc@chr
  2155                           
  2156                           ;lcd_hd44780.c: 105: PORTAbits.RA4 = 1;
  2157     03ED  1605               	bsf	5,4	;volatile
  2158                           
  2159                           ;lcd_hd44780.c: 106: LCD_wrdata(chr);
  2160     03EE  0850               	movf	LCD_putc@chr,w
  2161     03EF  227A               	fcall	_LCD_wrdata
  2162     03F0  0008               	return
  2163     03F1                     __end_of_LCD_putc:
  2164                           
  2165                           	psect	text11
  2166     022A                     __ptext11:	
  2167 ;; *************** function _LCD_init *****************
  2168 ;; Defined at:
  2169 ;;		line 118 in file "lcd_hd44780.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  i               1    5[BANK0 ] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : B00/0
  2180 ;;		On exit  : 300/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2183 ;;      Params:         0       0       0       0
  2184 ;;      Locals:         0       1       0       0
  2185 ;;      Temps:          0       2       0       0
  2186 ;;      Totals:         0       3       0       0
  2187 ;;Total ram usage:        3 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 4
  2190 ;; This function calls:
  2191 ;;		_LCD_waitbf
  2192 ;;		_LCD_wrdata
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198     022A                     _LCD_init:	
  2199                           ;psect for function _LCD_init
  2200                           
  2201                           
  2202                           ;lcd_hd44780.c: 120: LCD.DisplayControl = 0b00001000;
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2206     022A  3008               	movlw	8
  2207     022B  00B1               	movwf	_LCD+1
  2208                           
  2209                           ;lcd_hd44780.c: 122: TRISA &= 0xF0;
  2210     022C  30F0               	movlw	240
  2211     022D  00FF               	movwf	127
  2212     022E  087F               	movf	127,w
  2213     022F  1683               	bsf	3,5	;RP0=1, select bank1
  2214     0230  0585               	andwf	5,f	;volatile
  2215                           
  2216                           ;lcd_hd44780.c: 123: PORTAbits.RA4 = 0;
  2217     0231  1283               	bcf	3,5	;RP0=0, select bank0
  2218     0232  1205               	bcf	5,4	;volatile
  2219                           
  2220                           ;lcd_hd44780.c: 125: uint8_t i = 3;
  2221     0233  3003               	movlw	3
  2222     0234  00D2               	movwf	LCD_init@i
  2223     0235                     l1423:
  2224                           
  2225                           ;lcd_hd44780.c: 127: _delay((unsigned long)((50)*(4000000/4000.0)));
  2226     0235  3041               	movlw	65
  2227     0236  1283               	bcf	3,5	;RP0=0, select bank0
  2228     0237  1303               	bcf	3,6	;RP1=0, select bank0
  2229     0238  00D1               	movwf	??_LCD_init+1
  2230     0239  30EE               	movlw	238
  2231     023A  00D0               	movwf	??_LCD_init
  2232     023B                     u997:
  2233     023B  0BD0               	decfsz	??_LCD_init,f
  2234     023C  2A3B               	goto	u997
  2235     023D  0BD1               	decfsz	??_LCD_init+1,f
  2236     023E  2A3B               	goto	u997
  2237                           
  2238                           ;lcd_hd44780.c: 129: PORTAbits.RA6 = 1;
  2239     023F  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0240  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0241  1705               	bsf	5,6	;volatile
  2242                           
  2243                           ;lcd_hd44780.c: 130: PORTA = (PORTA & 0xf0) | 0x03;
  2244     0242  0805               	movf	5,w	;volatile
  2245     0243  39F0               	andlw	240
  2246     0244  3803               	iorlw	3
  2247     0245  0085               	movwf	5	;volatile
  2248                           
  2249                           ;lcd_hd44780.c: 131: __nop();
  2250     0246  0000               	nop
  2251                           
  2252                           ;lcd_hd44780.c: 132: __nop();
  2253     0247  0000               	nop
  2254                           
  2255                           ;lcd_hd44780.c: 133: PORTAbits.RA6 = 0;
  2256     0248  1283               	bcf	3,5	;RP0=0, select bank0
  2257     0249  1303               	bcf	3,6	;RP1=0, select bank0
  2258     024A  1305               	bcf	5,6	;volatile
  2259                           
  2260                           ;lcd_hd44780.c: 134: } while (i--);
  2261     024B  3001               	movlw	1
  2262     024C  02D2               	subwf	LCD_init@i,f
  2263     024D  0A52               	incf	LCD_init@i,w
  2264     024E  1D03               	btfss	3,2
  2265     024F  2A35               	goto	l1423
  2266                           
  2267                           ;lcd_hd44780.c: 136: __nop();
  2268     0250  0000               	nop
  2269                           
  2270                           ;lcd_hd44780.c: 137: __nop();
  2271     0251  0000               	nop
  2272                           
  2273                           ;lcd_hd44780.c: 140: PORTAbits.RA6 = 1;
  2274     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2275     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2276     0254  1705               	bsf	5,6	;volatile
  2277                           
  2278                           ;lcd_hd44780.c: 141: PORTA = (PORTA & 0xf0) | 0x02;
  2279     0255  0805               	movf	5,w	;volatile
  2280     0256  39F0               	andlw	240
  2281     0257  3802               	iorlw	2
  2282     0258  0085               	movwf	5	;volatile
  2283                           
  2284                           ;lcd_hd44780.c: 142: __nop();
  2285     0259  0000               	nop
  2286                           
  2287                           ;lcd_hd44780.c: 143: __nop();
  2288     025A  0000               	nop
  2289                           
  2290                           ;lcd_hd44780.c: 144: PORTAbits.RA6 = 0;
  2291     025B  1283               	bcf	3,5	;RP0=0, select bank0
  2292     025C  1303               	bcf	3,6	;RP1=0, select bank0
  2293     025D  1305               	bcf	5,6	;volatile
  2294                           
  2295                           ;lcd_hd44780.c: 147: LCD_waitbf();
  2296     025E  22F8               	fcall	_LCD_waitbf
  2297                           
  2298                           ;lcd_hd44780.c: 151: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) 0b00100000 | (uint8_t) 0b00
      +                          001000 | 0b00000000);;
  2299     025F  1205               	bcf	5,4	;volatile
  2300     0260  3028               	movlw	40
  2301     0261  227A               	fcall	_LCD_wrdata
  2302                           
  2303                           ;lcd_hd44780.c: 155: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) LCD.DisplayControl);;
  2304     0262  1205               	bcf	5,4	;volatile
  2305     0263  0831               	movf	_LCD+1,w
  2306     0264  227A               	fcall	_LCD_wrdata
  2307                           
  2308                           ;lcd_hd44780.c: 156: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) 0b00000001);; _delay((unsig
      +                          ned long)((50)*(4000000/4000.0)));;
  2309     0265  1205               	bcf	5,4	;volatile
  2310     0266  3001               	movlw	1
  2311     0267  227A               	fcall	_LCD_wrdata
  2312     0268  3041               	movlw	65
  2313     0269  1283               	bcf	3,5	;RP0=0, select bank0
  2314     026A  1303               	bcf	3,6	;RP1=0, select bank0
  2315     026B  00D1               	movwf	??_LCD_init+1
  2316     026C  30EE               	movlw	238
  2317     026D  00D0               	movwf	??_LCD_init
  2318     026E                     u1007:
  2319     026E  0BD0               	decfsz	??_LCD_init,f
  2320     026F  2A6E               	goto	u1007
  2321     0270  0BD1               	decfsz	??_LCD_init+1,f
  2322     0271  2A6E               	goto	u1007
  2323                           
  2324                           ;lcd_hd44780.c: 158: LCD.EntryMode = 0b00000100 | 0b00000010;
  2325     0272  3006               	movlw	6
  2326     0273  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0274  1303               	bcf	3,6	;RP1=0, select bank0
  2328     0275  00B0               	movwf	_LCD
  2329                           
  2330                           ;lcd_hd44780.c: 159: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) LCD.EntryMode);;
  2331     0276  1205               	bcf	5,4	;volatile
  2332     0277  0830               	movf	_LCD,w
  2333     0278  227A               	fcall	_LCD_wrdata
  2334     0279  0008               	return
  2335     027A                     __end_of_LCD_init:
  2336                           
  2337                           	psect	text12
  2338     03AC                     __ptext12:	
  2339 ;; *************** function _LCD_gotoxy *****************
  2340 ;; Defined at:
  2341 ;;		line 94 in file "lcd_hd44780.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  x               1    wreg     unsigned char 
  2344 ;;  y               1    3[BANK0 ] unsigned char 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  x               1    5[BANK0 ] unsigned char 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 300/0
  2353 ;;		On exit  : 300/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2356 ;;      Params:         0       1       0       0
  2357 ;;      Locals:         0       1       0       0
  2358 ;;      Temps:          0       1       0       0
  2359 ;;      Totals:         0       3       0       0
  2360 ;;Total ram usage:        3 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 4
  2363 ;; This function calls:
  2364 ;;		_LCD_wrdata
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370     03AC                     _LCD_gotoxy:	
  2371                           ;psect for function _LCD_gotoxy
  2372                           
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in _LCD_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2376                           ;LCD_gotoxy@x stored from wreg
  2377     03AC  00D2               	movwf	LCD_gotoxy@x
  2378                           
  2379                           ;lcd_hd44780.c: 95: PORTAbits.RA4 = 0; LCD_wrdata((uint8_t) 0b10000000 | (uint8_t) y * 0
      +                          x40 + x);;
  2380     03AD  1205               	bcf	5,4	;volatile
  2381     03AE  0850               	movf	LCD_gotoxy@y,w
  2382     03AF  00D1               	movwf	??_LCD_gotoxy
  2383     03B0  3006               	movlw	6
  2384     03B1                     u565:
  2385     03B1  1003               	clrc
  2386     03B2  0DD1               	rlf	??_LCD_gotoxy,f
  2387     03B3  3EFF               	addlw	-1
  2388     03B4  1D03               	skipz
  2389     03B5  2BB1               	goto	u565
  2390     03B6  0852               	movf	LCD_gotoxy@x,w
  2391     03B7  0751               	addwf	??_LCD_gotoxy,w
  2392     03B8  3880               	iorlw	128
  2393     03B9  227A               	fcall	_LCD_wrdata
  2394     03BA  0008               	return
  2395     03BB                     __end_of_LCD_gotoxy:
  2396                           
  2397                           	psect	text13
  2398     027A                     __ptext13:	
  2399 ;; *************** function _LCD_wrdata *****************
  2400 ;; Defined at:
  2401 ;;		line 34 in file "lcd_hd44780.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  data            1    wreg     unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  data            1    2[BANK0 ] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 300/0
  2412 ;;		On exit  : 300/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2415 ;;      Params:         0       0       0       0
  2416 ;;      Locals:         0       1       0       0
  2417 ;;      Temps:          0       1       0       0
  2418 ;;      Totals:         0       2       0       0
  2419 ;;Total ram usage:        2 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 3
  2422 ;; This function calls:
  2423 ;;		_LCD_waitbf
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;;		_LCD_set_cgram_addr
  2427 ;;		_LCD_gotoxy
  2428 ;;		_LCD_putc
  2429 ;;		_LCD_init
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433     027A                     _LCD_wrdata:	
  2434                           ;psect for function _LCD_wrdata
  2435                           
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in _LCD_wrdata: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2439                           ;LCD_wrdata@data stored from wreg
  2440     027A  00CF               	movwf	LCD_wrdata@data
  2441                           
  2442                           ;lcd_hd44780.c: 35: TRISA &= 0xF0;
  2443     027B  30F0               	movlw	240
  2444     027C  00FF               	movwf	127
  2445     027D  087F               	movf	127,w
  2446     027E  1683               	bsf	3,5	;RP0=1, select bank1
  2447     027F  0585               	andwf	5,f	;volatile
  2448                           
  2449                           ;lcd_hd44780.c: 38: PORTAbits.RA6 = 1;
  2450     0280  1283               	bcf	3,5	;RP0=0, select bank0
  2451     0281  1705               	bsf	5,6	;volatile
  2452                           
  2453                           ;lcd_hd44780.c: 39: __nop();
  2454     0282  0000               	nop
  2455                           
  2456                           ;lcd_hd44780.c: 40: PORTA = (PORTA & 0xF0) | data >> 4;
  2457     0283  1283               	bcf	3,5	;RP0=0, select bank0
  2458     0284  1303               	bcf	3,6	;RP1=0, select bank0
  2459     0285  084F               	movf	LCD_wrdata@data,w
  2460     0286  00CE               	movwf	??_LCD_wrdata
  2461     0287  3004               	movlw	4
  2462     0288                     u495:
  2463     0288  1003               	clrc
  2464     0289  0CCE               	rrf	??_LCD_wrdata,f
  2465     028A  3EFF               	addlw	-1
  2466     028B  1D03               	skipz
  2467     028C  2A88               	goto	u495
  2468     028D  0805               	movf	5,w	;volatile
  2469     028E  39F0               	andlw	240
  2470     028F  044E               	iorwf	??_LCD_wrdata,w
  2471     0290  0085               	movwf	5	;volatile
  2472                           
  2473                           ;lcd_hd44780.c: 41: __nop();
  2474     0291  0000               	nop
  2475                           
  2476                           ;lcd_hd44780.c: 42: PORTAbits.RA6 = 0;
  2477     0292  1283               	bcf	3,5	;RP0=0, select bank0
  2478     0293  1303               	bcf	3,6	;RP1=0, select bank0
  2479     0294  1305               	bcf	5,6	;volatile
  2480                           
  2481                           ;lcd_hd44780.c: 44: __nop();
  2482     0295  0000               	nop
  2483                           
  2484                           ;lcd_hd44780.c: 47: PORTAbits.RA6 = 1;
  2485     0296  1283               	bcf	3,5	;RP0=0, select bank0
  2486     0297  1303               	bcf	3,6	;RP1=0, select bank0
  2487     0298  1705               	bsf	5,6	;volatile
  2488                           
  2489                           ;lcd_hd44780.c: 48: __nop();
  2490     0299  0000               	nop
  2491                           
  2492                           ;lcd_hd44780.c: 49: PORTA = (PORTA & 0xF0) | (data & 0x0f);
  2493     029A  300F               	movlw	15
  2494     029B  1283               	bcf	3,5	;RP0=0, select bank0
  2495     029C  1303               	bcf	3,6	;RP1=0, select bank0
  2496     029D  054F               	andwf	LCD_wrdata@data,w
  2497     029E  00CE               	movwf	??_LCD_wrdata
  2498     029F  0805               	movf	5,w	;volatile
  2499     02A0  39F0               	andlw	240
  2500     02A1  044E               	iorwf	??_LCD_wrdata,w
  2501     02A2  0085               	movwf	5	;volatile
  2502                           
  2503                           ;lcd_hd44780.c: 50: __nop();
  2504     02A3  0000               	nop
  2505                           
  2506                           ;lcd_hd44780.c: 51: PORTAbits.RA6 = 0;
  2507     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2508     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2509     02A6  1305               	bcf	5,6	;volatile
  2510                           
  2511                           ;lcd_hd44780.c: 55: LCD_waitbf();
  2512     02A7  22F8               	fcall	_LCD_waitbf
  2513     02A8  0008               	return
  2514     02A9                     __end_of_LCD_wrdata:
  2515                           
  2516                           	psect	text14
  2517     02F8                     __ptext14:	
  2518 ;; *************** function _LCD_waitbf *****************
  2519 ;; Defined at:
  2520 ;;		line 62 in file "lcd_hd44780.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  busy            1    0[BANK0 ] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, btemp+1
  2529 ;; Tracked objects:
  2530 ;;		On entry : 300/0
  2531 ;;		On exit  : 300/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2534 ;;      Params:         0       0       0       0
  2535 ;;      Locals:         0       1       0       0
  2536 ;;      Temps:          0       0       0       0
  2537 ;;      Totals:         0       1       0       0
  2538 ;;Total ram usage:        1 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 2
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_LCD_wrdata
  2545 ;;		_LCD_init
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549     02F8                     _LCD_waitbf:	
  2550                           ;psect for function _LCD_waitbf
  2551                           
  2552                           
  2553                           ;lcd_hd44780.c: 64: bool busy;;lcd_hd44780.c: 66: PORTAbits.RA4 = 0;
  2554                           
  2555                           ;incstack = 0
  2556                           ; Regs used in _LCD_waitbf: [wreg+status,2+status,0+btemp+1]
  2557     02F8  1205               	bcf	5,4	;volatile
  2558                           
  2559                           ;lcd_hd44780.c: 67: PORTAbits.RA7 = 1;
  2560     02F9  1785               	bsf	5,7	;volatile
  2561                           
  2562                           ;lcd_hd44780.c: 69: TRISA |= 0x0f;
  2563     02FA  300F               	movlw	15
  2564     02FB  00FF               	movwf	127
  2565     02FC  087F               	movf	127,w
  2566     02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2567     02FE  0485               	iorwf	5,f	;volatile
  2568     02FF                     l1327:
  2569                           
  2570                           ;lcd_hd44780.c: 72: PORTAbits.RA6 = 1;
  2571     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2572     0300  1705               	bsf	5,6	;volatile
  2573                           
  2574                           ;lcd_hd44780.c: 73: __nop();
  2575     0301  0000               	nop
  2576                           
  2577                           ;lcd_hd44780.c: 75: busy = PORTA & 0x08;
  2578     0302  1283               	bcf	3,5	;RP0=0, select bank0
  2579     0303  1303               	bcf	3,6	;RP1=0, select bank0
  2580     0304  0805               	movf	5,w	;volatile
  2581     0305  3908               	andlw	8
  2582     0306  00CD               	movwf	LCD_waitbf@busy
  2583                           
  2584                           ;lcd_hd44780.c: 77: PORTAbits.RA6 = 0;
  2585     0307  1305               	bcf	5,6	;volatile
  2586                           
  2587                           ;lcd_hd44780.c: 78: __nop();
  2588     0308  0000               	nop
  2589                           
  2590                           ;lcd_hd44780.c: 80: PORTAbits.RA6 = 1;
  2591     0309  1283               	bcf	3,5	;RP0=0, select bank0
  2592     030A  1303               	bcf	3,6	;RP1=0, select bank0
  2593     030B  1705               	bsf	5,6	;volatile
  2594                           
  2595                           ;lcd_hd44780.c: 81: __nop();
  2596     030C  0000               	nop
  2597                           
  2598                           ;lcd_hd44780.c: 82: PORTAbits.RA6 = 0;
  2599     030D  1283               	bcf	3,5	;RP0=0, select bank0
  2600     030E  1303               	bcf	3,6	;RP1=0, select bank0
  2601     030F  1305               	bcf	5,6	;volatile
  2602                           
  2603                           ;lcd_hd44780.c: 83: __nop();
  2604     0310  0000               	nop
  2605                           
  2606                           ;lcd_hd44780.c: 84: } while (busy);
  2607     0311  1283               	bcf	3,5	;RP0=0, select bank0
  2608     0312  1303               	bcf	3,6	;RP1=0, select bank0
  2609     0313  084D               	movf	LCD_waitbf@busy,w
  2610     0314  1D03               	btfss	3,2
  2611     0315  2AFF               	goto	l1327
  2612                           
  2613                           ;lcd_hd44780.c: 86: PORTAbits.RA7 = 0;
  2614     0316  1385               	bcf	5,7	;volatile
  2615     0317  0008               	return
  2616     0318                     __end_of_LCD_waitbf:
  2617                           
  2618                           	psect	text15
  2619     01C7                     __ptext15:	
  2620 ;; *************** function _isr *****************
  2621 ;; Defined at:
  2622 ;;		line 322 in file "main.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  _key            1   10[COMMON] unsigned char 
  2627 ;;  _col            1    8[COMMON] unsigned char 
  2628 ;;  _row            1    9[COMMON] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2638 ;;      Params:         0       0       0       0
  2639 ;;      Locals:         3       0       0       0
  2640 ;;      Temps:          5       0       0       0
  2641 ;;      Totals:         8       0       0       0
  2642 ;;Total ram usage:        8 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 1
  2645 ;; This function calls:
  2646 ;;		_kbd_eval
  2647 ;;		i1__beep
  2648 ;; This function is called by:
  2649 ;;		Interrupt level 1
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653     01C7                     _isr:	
  2654                           ;psect for function _isr
  2655                           
  2656                           
  2657                           ;main.c: 324: static char prev_key = '\0';;main.c: 325: static uint8_t key_col_select;;m
      +                          ain.c: 326: static uint8_t kbd_skip_t0_cyc = 0;;main.c: 333: if (T0IF) {
  2658     01C7  1D0B               	btfss	11,2	;volatile
  2659     01C8  2A1F               	goto	i1l174
  2660                           
  2661                           ;main.c: 334: T0IF = 0;
  2662     01C9  110B               	bcf	11,2	;volatile
  2663                           
  2664                           ;main.c: 337: uint8_t _row = PORTB;
  2665     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2666     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2667     01CC  0806               	movf	6,w	;volatile
  2668     01CD  00F9               	movwf	isr@_row
  2669                           
  2670                           ;main.c: 341: if (kbd_skip_t0_cyc) {
  2671     01CE  087B               	movf	isr@kbd_skip_t0_cyc,w
  2672     01CF  1903               	btfsc	3,2
  2673     01D0  29D3               	goto	i1l1763
  2674                           
  2675                           ;main.c: 342: kbd_skip_t0_cyc--;
  2676     01D1  3001               	movlw	1
  2677     01D2  02FB               	subwf	isr@kbd_skip_t0_cyc,f
  2678     01D3                     i1l1763:
  2679                           
  2680                           ;main.c: 343: };main.c: 345: if (_row & 0xf0 && !key) {
  2681     01D3  0879               	movf	isr@_row,w
  2682     01D4  39F0               	andlw	240
  2683     01D5  1903               	btfsc	3,2
  2684     01D6  29F3               	goto	i1l1779
  2685     01D7  083B               	movf	_key,w
  2686     01D8  1D03               	btfss	3,2
  2687     01D9  29F3               	goto	i1l1779
  2688                           
  2689                           ;main.c: 346: uint8_t _col = key_col_select & 0x03;
  2690     01DA  087C               	movf	isr@key_col_select,w
  2691     01DB  3903               	andlw	3
  2692     01DC  00F8               	movwf	isr@_col
  2693                           
  2694                           ;main.c: 347: uint8_t _key;;main.c: 349: _key = kbd_eval(_row, _col);
  2695     01DD  0878               	movf	isr@_col,w
  2696     01DE  00F0               	movwf	kbd_eval@col
  2697     01DF  0879               	movf	isr@_row,w
  2698     01E0  234C               	fcall	_kbd_eval
  2699     01E1  00FA               	movwf	isr@_key
  2700                           
  2701                           ;main.c: 352: if (_key != prev_key || !kbd_skip_t0_cyc) {
  2702     01E2  087A               	movf	isr@_key,w
  2703     01E3  0633               	xorwf	isr@prev_key,w
  2704     01E4  1D03               	skipz
  2705     01E5  29E9               	goto	i1l1775
  2706     01E6  087B               	movf	isr@kbd_skip_t0_cyc,w
  2707     01E7  1D03               	btfss	3,2
  2708     01E8  29F3               	goto	i1l1779
  2709     01E9                     i1l1775:
  2710                           
  2711                           ;main.c: 353: kbd_skip_t0_cyc = 12;
  2712     01E9  300C               	movlw	12
  2713     01EA  00FB               	movwf	isr@kbd_skip_t0_cyc
  2714                           
  2715                           ;main.c: 354: key = _key;
  2716     01EB  087A               	movf	isr@_key,w
  2717     01EC  00BB               	movwf	_key
  2718                           
  2719                           ;main.c: 355: prev_key = _key;
  2720     01ED  087A               	movf	isr@_key,w
  2721     01EE  00B3               	movwf	isr@prev_key
  2722                           
  2723                           ;main.c: 356: _beep(120, 60);
  2724     01EF  303C               	movlw	60
  2725     01F0  00F0               	movwf	i1__beep@CCPR1L_val
  2726     01F1  3078               	movlw	120
  2727     01F2  23C8               	fcall	i1__beep
  2728     01F3                     i1l1779:
  2729                           
  2730                           ;main.c: 357: };main.c: 358: };main.c: 361: key_col_select++;
  2731     01F3  3001               	movlw	1
  2732     01F4  00FF               	movwf	127
  2733     01F5  087F               	movf	127,w
  2734     01F6  07FC               	addwf	isr@key_col_select,f
  2735                           
  2736                           ;main.c: 362: PORTB = (PORTB & 0xFC) | (key_col_select & 0x03);
  2737     01F7  3003               	movlw	3
  2738     01F8  057C               	andwf	isr@key_col_select,w
  2739     01F9  00F3               	movwf	??_isr
  2740     01FA  0806               	movf	6,w	;volatile
  2741     01FB  39FC               	andlw	252
  2742     01FC  0473               	iorwf	??_isr,w
  2743     01FD  0086               	movwf	6	;volatile
  2744                           
  2745                           ;main.c: 365: if (CCPR1L) {
  2746     01FE  0815               	movf	21,w	;volatile
  2747     01FF  1903               	btfsc	3,2
  2748     0200  2A08               	goto	i1l1791
  2749                           
  2750                           ;main.c: 367: if (beep_delay) {
  2751     0201  087D               	movf	_beep_delay,w
  2752     0202  1903               	btfsc	3,2
  2753     0203  2A07               	goto	i1l1789
  2754                           
  2755                           ;main.c: 368: beep_delay--;
  2756     0204  3001               	movlw	1
  2757     0205  02FD               	subwf	_beep_delay,f
  2758                           
  2759                           ;main.c: 369: } else {
  2760     0206  2A08               	goto	i1l1791
  2761     0207                     i1l1789:
  2762                           
  2763                           ;main.c: 371: CCPR1L = 0;
  2764     0207  0195               	clrf	21	;volatile
  2765     0208                     i1l1791:
  2766                           
  2767                           ;main.c: 372: };main.c: 373: };main.c: 376: if (gameB_spd_cnt && gameB_cnt_ena) {
  2768     0208  0839               	movf	_gameB_spd_cnt,w
  2769     0209  1903               	btfsc	3,2
  2770     020A  2A10               	goto	i1l172
  2771     020B  0834               	movf	_gameB_cnt_ena,w
  2772     020C  1903               	btfsc	3,2
  2773     020D  2A10               	goto	i1l172
  2774                           
  2775                           ;main.c: 377: gameB_spd_cnt--;
  2776     020E  3001               	movlw	1
  2777     020F  02B9               	subwf	_gameB_spd_cnt,f
  2778     0210                     i1l172:
  2779                           
  2780                           ;main.c: 378: };main.c: 380: if (flash_lcd) {
  2781     0210  0835               	movf	_flash_lcd,w
  2782     0211  1903               	btfsc	3,2
  2783     0212  2A1F               	goto	i1l174
  2784                           
  2785                           ;main.c: 381: PORTBbits.RB2 = !PORTBbits.RB2;
  2786     0213  1003               	clrc
  2787     0214  1D06               	btfss	6,2	;volatile
  2788     0215  1403               	setc
  2789     0216  1C03               	btfss	3,0
  2790     0217  2A1C               	goto	u93_20
  2791     0218  1283               	bcf	3,5	;RP0=0, select bank0
  2792     0219  1303               	bcf	3,6	;RP1=0, select bank0
  2793     021A  1506               	bsf	6,2	;volatile
  2794     021B  2A1F               	goto	i1l174
  2795     021C                     u93_20:
  2796     021C  1283               	bcf	3,5	;RP0=0, select bank0
  2797     021D  1303               	bcf	3,6	;RP1=0, select bank0
  2798     021E  1106               	bcf	6,2	;volatile
  2799     021F                     i1l174:
  2800     021F  0877               	movf	??_isr+4,w
  2801     0220  00FF               	movwf	127
  2802     0221  0876               	movf	??_isr+3,w
  2803     0222  008A               	movwf	10
  2804     0223  0875               	movf	??_isr+2,w
  2805     0224  0084               	movwf	4
  2806     0225  0E74               	swapf	??_isr+1,w
  2807     0226  0083               	movwf	3
  2808     0227  0EFE               	swapf	126,f
  2809     0228  0E7E               	swapf	126,w
  2810     0229  0009               	retfie
  2811     022A                     __end_of_isr:
  2812                           
  2813                           	psect	intentry
  2814     0004                     __pintentry:	
  2815                           ;incstack = 0
  2816                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2817                           
  2818     0004                     interrupt_function:
  2819     007E                     saved_w	set	btemp
  2820     0004  00FE               	movwf	btemp
  2821     0005  0E03               	swapf	3,w
  2822     0006  00F4               	movwf	??_isr+1
  2823     0007  0804               	movf	4,w
  2824     0008  00F5               	movwf	??_isr+2
  2825     0009  080A               	movf	10,w
  2826     000A  00F6               	movwf	??_isr+3
  2827     000B  087F               	movf	btemp+1,w
  2828     000C  00F7               	movwf	??_isr+4
  2829     000D  29C7               	ljmp	_isr
  2830                           
  2831                           	psect	text16
  2832     03C8                     __ptext16:	
  2833 ;; *************** function i1__beep *****************
  2834 ;; Defined at:
  2835 ;;		line 392 in file "main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  PR2_val         1    wreg     unsigned char 
  2838 ;;  CCPR1L_val      1    0[COMMON] unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  PR2_val         1    1[COMMON] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : B00/0
  2847 ;;		On exit  : B00/0
  2848 ;;		Unchanged: 800/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2850 ;;      Params:         1       0       0       0
  2851 ;;      Locals:         1       0       0       0
  2852 ;;      Temps:          0       0       0       0
  2853 ;;      Totals:         2       0       0       0
  2854 ;;Total ram usage:        2 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_isr
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863     03C8                     i1__beep:	
  2864                           ;psect for function i1__beep
  2865                           
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in i1__beep: [wreg+status,2+status,0]
  2869                           ;i1__beep@PR2_val stored from wreg
  2870     03C8  00F1               	movwf	i1__beep@PR2_val
  2871                           
  2872                           ;main.c: 395: if (CCPR1L) return;
  2873     03C9  0815               	movf	21,w	;volatile
  2874     03CA  1D03               	btfss	3,2
  2875     03CB  0008               	return
  2876                           
  2877                           ;main.c: 398: beep_delay = 6;
  2878     03CC  3006               	movlw	6
  2879     03CD  00FD               	movwf	_beep_delay
  2880                           
  2881                           ;main.c: 399: PR2 = PR2_val;
  2882     03CE  0871               	movf	i1__beep@PR2_val,w
  2883     03CF  1683               	bsf	3,5	;RP0=1, select bank1
  2884     03D0  0092               	movwf	18	;volatile
  2885                           
  2886                           ;main.c: 400: CCPR1L = CCPR1L_val;
  2887     03D1  0870               	movf	i1__beep@CCPR1L_val,w
  2888     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2889     03D3  0095               	movwf	21	;volatile
  2890     03D4  0008               	return
  2891     03D5                     __end_ofi1__beep:
  2892                           
  2893                           	psect	text17
  2894     034C                     __ptext17:	
  2895 ;; *************** function _kbd_eval *****************
  2896 ;; Defined at:
  2897 ;;		line 11 in file "keypad.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  row             1    wreg     unsigned char 
  2900 ;;  col             1    0[COMMON] unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  row             1    2[COMMON] unsigned char 
  2903 ;;  key_ptr         1    1[COMMON] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      unsigned char 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2908 ;; Tracked objects:
  2909 ;;		On entry : 300/0
  2910 ;;		On exit  : B00/0
  2911 ;;		Unchanged: 300/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2913 ;;      Params:         1       0       0       0
  2914 ;;      Locals:         2       0       0       0
  2915 ;;      Temps:          0       0       0       0
  2916 ;;      Totals:         3       0       0       0
  2917 ;;Total ram usage:        3 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_isr
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926     034C                     _kbd_eval:	
  2927                           ;psect for function _kbd_eval
  2928                           
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in _kbd_eval: [wreg-fsr0h+status,2+status,0+btemp+1]
  2932                           ;kbd_eval@row stored from wreg
  2933     034C  00F2               	movwf	kbd_eval@row
  2934                           
  2935                           ;keypad.c: 13: uint8_t key_ptr = 0x00;
  2936     034D  01F1               	clrf	kbd_eval@key_ptr
  2937                           
  2938                           ;keypad.c: 16: if (row & 0x20) {
  2939     034E  1EF2               	btfss	kbd_eval@row,5
  2940     034F  2B52               	goto	i1l250
  2941                           
  2942                           ;keypad.c: 17: key_ptr = 4;
  2943     0350  3004               	movlw	4
  2944     0351  2B59               	goto	L1
  2945     0352                     i1l250:	
  2946                           ;keypad.c: 18: } else if (row & 0x40) {
  2947                           
  2948     0352  1F72               	btfss	kbd_eval@row,6
  2949     0353  2B56               	goto	i1l252
  2950                           
  2951                           ;keypad.c: 19: key_ptr = 8;
  2952     0354  3008               	movlw	8
  2953     0355  2B59               	goto	L1
  2954     0356                     i1l252:	
  2955                           ;keypad.c: 20: } else if (row & 0x80) {
  2956                           
  2957     0356  1FF2               	btfss	kbd_eval@row,7
  2958     0357  2B5A               	goto	i1l1533
  2959                           
  2960                           ;keypad.c: 21: key_ptr = 12;
  2961     0358  300C               	movlw	12
  2962     0359                     L1:
  2963     0359  00F1               	movwf	kbd_eval@key_ptr
  2964     035A                     i1l1533:
  2965                           
  2966                           ;keypad.c: 22: };keypad.c: 26: key_ptr |= col;
  2967     035A  0870               	movf	kbd_eval@col,w
  2968     035B  00FF               	movwf	127
  2969     035C  087F               	movf	127,w
  2970     035D  04F1               	iorwf	kbd_eval@key_ptr,f
  2971                           
  2972                           ;keypad.c: 28: return keys[key_ptr];
  2973     035E  0871               	movf	kbd_eval@key_ptr,w
  2974     035F  3E20               	addlw	(low (_keys| 0))& (0+255)
  2975     0360  0084               	movwf	4
  2976     0361  1383               	bcf	3,7	;select IRP bank0
  2977     0362  0800               	movf	0,w
  2978     0363  0008               	return
  2979     0364                     __end_of_kbd_eval:
  2980     007E                     btemp	set	126	;btemp
  2981     007E                     wtemp0	set	126
  2982                           
  2983                           	psect	idloc
  2984                           
  2985                           ;Config register IDLOC0 @ 0x2000
  2986                           ;	unspecified, using default values
  2987     2000                     	org	8192
  2988     2000  3FFF               	dw	16383
  2989                           
  2990                           ;Config register IDLOC1 @ 0x2001
  2991                           ;	unspecified, using default values
  2992     2001                     	org	8193
  2993     2001  3FFF               	dw	16383
  2994                           
  2995                           ;Config register IDLOC2 @ 0x2002
  2996                           ;	unspecified, using default values
  2997     2002                     	org	8194
  2998     2002  3FFF               	dw	16383
  2999                           
  3000                           ;Config register IDLOC3 @ 0x2003
  3001                           ;	unspecified, using default values
  3002     2003                     	org	8195
  3003     2003  3FFF               	dw	16383
  3004                           
  3005                           	psect	config
  3006                           
  3007                           ;Config register CONFIG @ 0x2007
  3008                           ;	Oscillator Selection bits
  3009                           ;	FOSC = INTOSCIO, INTRC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function o
      +                          n RA7/OSC1/CLKIN
  3010                           ;	Watchdog Timer Enable bit
  3011                           ;	WDTE = OFF, WDT disabled
  3012                           ;	Power-up Timer Enable bit
  3013                           ;	PWRTE = OFF, PWRT disabled
  3014                           ;	RA5/MCLR pin function select
  3015                           ;	MCLRE = OFF, RA5/MCLR pin function is digital input, MCLR internally tied to VDD
  3016                           ;	Brown-out Reset Enable bit
  3017                           ;	BOREN = ON, BOD Reset enabled
  3018                           ;	Low-Voltage Programming Enable bit
  3019                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  3020                           ;	Data Code Protection bit
  3021                           ;	CPD = OFF, Data memory code protection off
  3022                           ;	Code Protection bits
  3023                           ;	CP = OFF, Program memory code protection off
  3024     2007                     	org	8199
  3025     2007  3F58               	dw	16216

Data Sizes:
    Strings     21
    Constant    0
    Data        69
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     18      63
    BANK1            80      0      34
    BANK2            48      0       0

Pointer List with Targets:

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 48
		 -> tile_set(EEDATA[4]), eeprom_cgram_data(EEDATA[48]), eeprom_keys(EEDATA[17]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 48
		 -> tile_set(EEDATA[4]), eeprom_cgram_data(EEDATA[48]), eeprom_keys(EEDATA[17]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[4]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[4]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    LCD_wr_custom_char@dataarr	PTR const unsigned char  size(1) Largest target is 48
		 -> eeprom_cgram_data(EEDATA[48]), 

    LCD_puts@str	PTR const unsigned char  size(2) Largest target is 34
		 -> gameB_track(BANK1[34]), STR_2(CODE[7]), STR_1(CODE[14]), gameA_line_buf(BANK0[17]), 

    clearstr@str	PTR unsigned char  size(1) Largest target is 17
		 -> gameA_line_buf(BANK0[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_kbd_eval

Critical Paths under _main in BANK0

    _main->_LCD_wr_custom_char
    _rand_tile->___eetoc
    _LCD_wr_custom_char->___eetoc
    ___eetoc->___eecpymem
    _LCD_set_cgram_addr->_LCD_wrdata
    _LCD_puts->_LCD_putc
    _LCD_putc->_LCD_wrdata
    _LCD_init->_LCD_wrdata
    _LCD_gotoxy->_LCD_wrdata
    _LCD_wrdata->_LCD_waitbf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7084
                                             10 BANK0      8     8      0
                         _LCD_gotoxy
                           _LCD_init
                           _LCD_putc
                           _LCD_puts
                 _LCD_wr_custom_char
                         _LCD_wrdata
                            ___eetoc
                              __beep
                           _clearstr
                               _init
                          _rand_tile
 ---------------------------------------------------------------------------------
 (1) _rand_tile                                            1     1      0    1383
                                              6 BANK0      1     1      0
                            ___eetoc
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearstr                                             1     1      0      78
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) __beep                                                2     1      1     246
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCD_wr_custom_char                                   4     3      1    2018
                                              6 BANK0      4     3      1
                           _LCD_putc
                 _LCD_set_cgram_addr
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              2     2      0    1316
                                              4 BANK0      2     2      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (3) ___eecpymem                                           4     2      2    1229
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_set_cgram_addr                                   1     1      0      89
                                              3 BANK0      1     1      0
                         _LCD_wrdata
 ---------------------------------------------------------------------------------
 (1) _LCD_puts                                             2     0      2     514
                                              4 BANK0      2     0      2
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             1     1      0      89
                                              3 BANK0      1     1      0
                         _LCD_wrdata
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     113
                                              3 BANK0      3     3      0
                         _LCD_waitbf
                         _LCD_wrdata
 ---------------------------------------------------------------------------------
 (1) _LCD_gotoxy                                           3     2      1     719
                                              3 BANK0      3     2      1
                         _LCD_wrdata
 ---------------------------------------------------------------------------------
 (1) _LCD_wrdata                                           2     2      0      67
                                              1 BANK0      2     2      0
                         _LCD_waitbf
 ---------------------------------------------------------------------------------
 (2) _LCD_waitbf                                           1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  8     8      0     396
                                              3 COMMON     8     8      0
                           _kbd_eval
                            i1__beep
 ---------------------------------------------------------------------------------
 (6) i1__beep                                              2     1      1      70
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (6) _kbd_eval                                             3     2      1     191
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_gotoxy
     _LCD_wrdata
       _LCD_waitbf
   _LCD_init
     _LCD_waitbf
     _LCD_wrdata
   _LCD_putc
     _LCD_wrdata
   _LCD_puts
     _LCD_putc
   _LCD_wr_custom_char
     _LCD_putc
     _LCD_set_cgram_addr
       _LCD_wrdata
     ___eetoc
       ___eecpymem
   _LCD_wrdata
   ___eetoc
   __beep
   _clearstr
   _init
   _rand_tile
     ___eetoc

 _isr (ROOT)
   _kbd_eval
   i1__beep

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      22       7       42.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      3F       3       78.8%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6F      10        0.0%
ABS                  0      0      6F       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0      45       0       53.9%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 31 00:34:35 2023

                         pc 0002                          fsr 0004                         l101 006C  
                       l110 0093                         l130 0113                         l131 013A  
                       l123 00EA                         l142 0172                         l128 00EF  
                       l137 0169                         l129 00F1                         l272 02AC  
                       l277 02B9                         _LCD 0030                         _PR2 0092  
                       u545 031C                         u565 03B1                         u495 0288  
                       u957 0075                         u967 009C                         u977 0124  
                       u987 01C2                         u997 023B                 ?_LCD_gotoxy 0050  
                       _key 003B                         _isr 01C7                         fsr0 0004  
                       indf 0000                 ?_LCD_waitbf 0070        _gameB_obstacle_delay 0037  
               ?_LCD_wrdata 0070                        l1327 02FF                        l1423 0235  
                      l1511 033B                        l1605 0081                        l1471 0326  
                      l1519 0348                        l1607 0082                        l1713 0170  
                      l1609 0086                        l1387 02B3                        l1643 00D0  
                      l1635 00C0                        l1627 00B1                        l1717 0175  
                      l1661 00F2                        l1741 01B2                        l1637 00C5  
                      l1549 0020                        l1487 0364                        l1495 038E  
                      l1719 0180                        l1639 00CD                        l1729 0186  
                      l1659 0101                        l1739 01AA                        l1587 0067  
                      l1579 0054                        l1693 014E                        l1589 0068  
                      ?_isr 0070                        STR_1 02E3                        STR_2 02F1  
                      _T0IF 005A                        u1007 026E                        _TMR0 0001  
                      _TMR2 0011              _gameA_line_buf 003C                        _main 001D  
                      _init 0379                        _keys 0020                        btemp 007E  
           __end_ofi1__beep 03D5                        start 000E                       ??_isr 0073  
          __end_of_LCD_init 027A            __end_of_LCD_putc 03F1            __end_of_LCD_puts 0379  
                     ?_main 0070             __end_of___eetoc 03DE                       ?_init 0070  
                     _EEADR 009B                       _CMCON 001F                       _T2CON 0012  
            _gameB_truckpos 0038                       i1l250 0352                       i1l252 0356  
                     i1l172 0210                       i1l174 021F                       _PORTA 0005  
                     _PORTB 0006                       _TRISA 0085                       _TRISB 0086  
                     u93_20 021C                       __beep 03BB             i1__beep@PR2_val 0071  
                     main@i 005E                       pclath 000A                       status 0003  
                     wtemp0 007E             __initialization 000F                __end_of_main 01C7  
              __end_of_init 038D                 LCD_gotoxy@x 0052                 LCD_gotoxy@y 0050  
                    ??_main 0057            _gameB_difficulty 0036                      ??_init 004D  
               LCD_putc@chr 0050                 LCD_puts@str 0051                      ?__beep 004D  
                    _EEDATA 009A          _LCD_set_cgram_addr 03E6                      _CCPR1L 0015  
                    _EECON1 009C          _LCD_wr_custom_char 0318                   ??i1__beep 0071  
                    i1l1533 035A                      i1l1763 01D3                      i1l1791 0208  
                    i1l1775 01E9                      i1l1779 01F3                      i1l1789 0207  
                    _INTCON 000B         ?_LCD_set_cgram_addr 0070         ?_LCD_wr_custom_char 0053  
          __end_of_clearstr 039D            __end_of_kbd_eval 0364              LCD_waitbf@busy 004D  
               isr@prev_key 0033                   ??___eetoc 0051        ??_LCD_set_cgram_addr 0050  
              __pdataEEDATA 0000        ??_LCD_wr_custom_char 0054                      saved_w 007E  
                ___eecpymem 02A9     __end_of__initialization 001B                   ?_LCD_init 0070  
                 ?_LCD_putc 0070                   ?_LCD_puts 0051              __pcstackCOMMON 0070  
             __end_of__beep 03C8           _eeprom_cgram_data 0000                   LCD_init@i 0052  
              ??_LCD_gotoxy 0051                ??_LCD_waitbf 004D                ??_LCD_wrdata 004E  
                _beep_delay 007D                     ??__beep 004E              LCD_wrdata@data 004F  
                __pbssBANK0 0020                  __pbssBANK1 00A0                  ??_LCD_init 0050  
                ??_LCD_putc 0050                  ??_LCD_puts 0053          isr@kbd_skip_t0_cyc 007B  
                __pmaintext 001D          __end_of_LCD_gotoxy 03BB          __end_of_LCD_waitbf 0318  
        __end_of_LCD_wrdata 02A9                  __pintentry 0004                     _CCP1CON 0017  
                 ?_clearstr 0070                   ?_kbd_eval 0070                     i1__beep 03C8  
                __stringtab 02D3                 ?___eecpymem 004D                     ___eetoc 03D5  
                   __ptext1 0333                     __ptext2 0379                     __ptext3 038D  
                   __ptext4 03BB                     __ptext5 0318                     __ptext6 03D5  
                   __ptext7 02A9                     __ptext8 03E6                     __ptext9 0364  
                ??_clearstr 004D           __end_of_rand_tile 034C                  ??_kbd_eval 0071  
                   clrloop0 03DF        end_of_initialization 001B                     isr@_col 0078  
                   isr@_key 007A                     isr@_row 0079                   _PORTAbits 0005  
                 _PORTBbits 0006            __beep@CCPR1L_val 004D               _gameB_cnt_ena 0034  
           kbd_eval@key_ptr 0071               _gameB_spd_cnt 0039               __pidataEEDATA 0000  
       start_initialization 000F                 __end_of_isr 022A                rand_tile@res 0053  
                init_fetch0 039D                 __pbssCOMMON 007B                   ___latbits 0000  
             __pcstackBANK0 004D                 _gameB_track 00A0                    ?i1__beep 0070  
              ??___eecpymem 004F                   _gameB_spd 003A   LCD_wr_custom_char@dataarr 0053  
                  ?___eetoc 0070          i1__beep@CCPR1L_val 0070                   _flash_lcd 0035  
                 __pstrings 02D3          __end_of___eecpymem 02D3        rand_tile@psrand_seed 0032  
                 _rand_tile 0333           interrupt_function 0004                    _LCD_init 022A  
                 clear_ram0 03DE                    _LCD_putc 03EC                 _eeprom_keys 0030  
                  _LCD_puts 0364                    _PCONbits 008E                 __stringbase 02E2  
                ?_rand_tile 0070                  _EECON1bits 009C          __end_of__stringtab 02E3  
                  _clearstr 038D                    __ptext10 03EC                    __ptext11 022A  
                  __ptext12 03AC                    __ptext13 027A                    __ptext14 02F8  
                  __ptext15 01C7                    __ptext16 03C8                    __ptext17 034C  
                  _kbd_eval 034C      LCD_set_cgram_addr@addr 0050                    _tile_set 0041  
                  main@_key 005A                    main@hits 005C  __end_of_LCD_set_cgram_addr 03EC  
__end_of_LCD_wr_custom_char 0333                    main@xpos 005B                    main@ypos 005D  
    LCD_wr_custom_char@code 0055             ___eecpymem@from 004D             ___eecpymem@size 004E  
                _LCD_gotoxy 03AC                  _LCD_waitbf 02F8                  _LCD_wrdata 027A  
                  init_ram0 03A1                    intlevel1 0000                 ??_rand_tile 0053  
               clearstr@str 004D                   stringcode 02DD       LCD_wr_custom_char@cnt 0056  
                _OPTION_REG 0081               __beep@PR2_val 004E                    stringdir 02DD  
         isr@key_col_select 007C                    stringtab 02D3                 kbd_eval@col 0070  
               kbd_eval@row 0072               ___eecpymem@cp 004F               ___eecpymem@to 0050  
              ___eetoc@addr 0051                ___eetoc@data 0052  
